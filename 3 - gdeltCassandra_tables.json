{"paragraphs":[{"text":"import com.datastax.spark.connector._\nimport com.datastax.spark.connector.cql._ //(Optional) Imports java driver helper functions\nimport org.apache.spark.sql.cassandra._","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import com.datastax.spark.connector._\nimport com.datastax.spark.connector.cql._\nimport org.apache.spark.sql.cassandra._\n"}]},"apps":[],"jobName":"paragraph_1581024445243_870818461","id":"20200122-155458_1831839660","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:15067"},{"text":"import sys.process._\nimport java.net.URL\nimport java.io.File\nimport java.io.File\nimport java.nio.file.{Files, StandardCopyOption}\nimport java.net.HttpURLConnection \nimport org.apache.spark.sql.functions._\n","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import sys.process._\nimport java.net.URL\nimport java.io.File\nimport java.io.File\nimport java.nio.file.{Files, StandardCopyOption}\nimport java.net.HttpURLConnection\nimport org.apache.spark.sql.functions._\n"}]},"apps":[],"jobName":"paragraph_1581024445243_947986862","id":"20181209-161931_737140067","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15068"},{"text":"%md\n### Création du KEYSPACE avec un facteir de réplication de 3","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Création du KEYSPACE avec un facteir de réplication de 3</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1581024445243_-2047153900","id":"20200122-233506_52804854","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15069"},{"text":"val c = CassandraConnector(sc.getConf)","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"c: com.datastax.spark.connector.cql.CassandraConnector = com.datastax.spark.connector.cql.CassandraConnector@726e62cd\n"}]},"apps":[],"jobName":"paragraph_1581024445244_1838220950","id":"20200123-095447_238490783","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15070"},{"text":"c.withSessionDo ( session => session.execute(\"CREATE KEYSPACE gdelt WITH replication={'class':'SimpleStrategy', 'replication_factor':3}\"))","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res42: com.datastax.driver.core.ResultSet = ResultSet[ exhausted: true, Columns[]]\n"}]},"apps":[],"jobName":"paragraph_1581024445244_704339836","id":"20200122-222709_1084803310","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15071"},{"text":"%md\n### Création de la table 1","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Création de la table 1</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1581024445244_-143970005","id":"20200122-233443_55166776","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15072"},{"text":"c.withSessionDo ( session => session.execute(\"DROP TABLE gdelt.q1_1\"))\nc.withSessionDo ( session => session.execute(\"CREATE TABLE gdelt.q1_1 (date text, pays text, langue_article text, evenement int, nombre_article int, PRIMARY KEY (date, langue_article, pays))\"))","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res43: com.datastax.driver.core.ResultSet = ResultSet[ exhausted: true, Columns[]]\n"}]},"apps":[],"jobName":"paragraph_1581024445244_-988955843","id":"20200122-163810_521030847","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15073"},{"text":"%md\nChargement des données dans la table 1","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Chargement des données dans la table 1</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1581024445244_-1612326146","id":"20200123-154143_120779748","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15074"},{"text":"val question1Df = spark.read.format(\"csv\")\n  .option(\"sep\", \",\")\n  .option(\"inferSchema\", \"true\")\n  .option(\"header\", \"true\")\n  .load(\"question_1.csv\")\n  .cache()","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1581024445244_1783647496","id":"20200123-170939_182731385","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15075"},{"text":"val question1DfParquet = spark.read.parquet(\"s3a://hiroto-yamakawa-telecom-gdelt2019/question1Df_1mois.parquet\").cache()","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1581024445244_-1207670517","id":"20200123-171025_1854153103","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15076"},{"text":"question1DfParquet.write.cassandraFormat(\"q1_1\", \"gdelt\").save()\nval dfq_1 = spark.read.cassandraFormat(\"q1_1\", \"gdelt\").load()\ndfq_1.createOrReplaceTempView(\"q1_1\")","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1581024445244_-376859083","id":"20200123-171055_494663611","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15077"},{"text":"z.show(spark.sql(\"\"\" SELECT * FROM q1_1 LIMIT 10 \"\"\"))","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"date":"string","langue_article":"string","pays":"string","evenement":"string","nombre_article":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"date\tlangue_article\tpays\tevenement\tnombre_article\n2018/12/19\tara\tAM\t894087843\t1\n2018/12/19\tara\tMO\t894045492\t2\n2018/12/19\tara\tUK\t893959856\t1\n2018/12/19\tara\tUS\t893973075\t1\n2018/12/19\taxe\tAJ\t893965024\t1\n2018/12/19\tbul\tBU\t893973070\t1\n2018/12/19\tbul\tGM\t893927389\t1\n2018/12/19\tbul\tUK\t893970268\t2\n2018/12/19\tces\tBU\t894092369\t1\n2018/12/19\tces\tEZ\t894034578\t1\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1581024445244_-2071077541","id":"20200123-171218_475631636","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15078"},{"text":"%md\n### Création de la table 2","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Création de la table 2</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1581024445244_323598720","id":"20200122-233420_610341779","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15079"},{"text":"c.withSessionDo ( session => session.execute(\"DROP TABLE gdelt.q2_jour\"))\nc.withSessionDo ( session => session.execute(\"DROP TABLE gdelt.q2_mois\"))\nc.withSessionDo ( session => session.execute(\"DROP TABLE gdelt.q2_annee\"))","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res61: com.datastax.driver.core.ResultSet = ResultSet[ exhausted: true, Columns[]]\n"}]},"apps":[],"jobName":"paragraph_1581024445245_1656404069","id":"20200123-145248_1054350834","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15080"},{"text":"c.withSessionDo ( session => session.execute(\"DROP TABLE gdelt.query_2\"))\nc.withSessionDo ( session => session.execute(\"CREATE TABLE gdelt.query_2 (pays text, date text, mois_annee text, annee int, evenement int, nombre_mentions int, PRIMARY KEY ((pays, evenement), nombre_mentions)) WITH CLUSTERING ORDER BY (nombre_mentions DESC)\"))","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res101: com.datastax.driver.core.ResultSet = ResultSet[ exhausted: true, Columns[]]\n"}]},"apps":[],"jobName":"paragraph_1581024445245_-1762678935","id":"20200122-231414_966215834","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15081"},{"text":"val question2DfParquet = spark.read.parquet(\"s3a://hiroto-yamakawa-telecom-gdelt2019/question2Df_1mois.parquet\")","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"question2DfParquet: org.apache.spark.sql.DataFrame = [pays: string, date: string ... 4 more fields]\n"}]},"apps":[],"jobName":"paragraph_1581024445245_-1854673312","id":"20200123-154251_1157601987","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15082"},{"text":"question2DfParquet.show()","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----+----------+----------+-----+---------+---------------+\n|pays|      date|mois_annee|annee|evenement|nombre_mentions|\n+----+----------+----------+-----+---------+---------------+\n|  US|2019/12/01|   2019/12| 2019|890018586|              1|\n|  LE|2019/12/01|   2019/12| 2019|890018652|              1|\n|  BN|2019/12/01|   2019/12| 2019|890019481|              2|\n|  BA|2019/12/01|   2019/12| 2019|890020367|              4|\n|  GM|2019/12/01|   2019/12| 2019|890020587|              4|\n|  UP|2019/12/01|   2019/12| 2019|890020705|              4|\n|  AS|2019/12/01|   2019/12| 2019|890021198|              8|\n|  CH|2019/12/01|   2019/12| 2019|890021294|              1|\n|  UK|2019/12/01|   2019/12| 2019|890021854|              2|\n|  US|2019/12/01|   2019/12| 2019|890021958|              3|\n|  UK|2019/12/01|   2019/12| 2019|890022800|            131|\n|  UK|2019/12/01|   2019/12| 2019|890022818|              1|\n|  ZI|2019/12/01|   2019/12| 2019|890022959|              1|\n|  IN|2019/12/01|   2019/12| 2019|890023023|              2|\n|  UK|2019/12/01|   2019/12| 2019|890023185|              1|\n|  CH|2019/12/01|   2019/12| 2019|890023304|              1|\n|  US|2019/12/01|   2019/12| 2019|890023657|              2|\n|  NO|2019/12/01|   2019/12| 2019|890023864|              4|\n|  CO|2019/12/01|   2019/12| 2019|890024036|              4|\n|  UK|2019/12/01|   2019/12| 2019|890024273|              6|\n+----+----------+----------+-----+---------+---------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1581024445245_1051651336","id":"20200123-161146_923124186","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15083"},{"text":"question2DfParquet.write.cassandraFormat(\"query_2\", \"gdelt\").save()\nval dfq_2 = spark.read.cassandraFormat(\"query_2\", \"gdelt\").load()\ndfq_2.createOrReplaceTempView(\"query_2\")","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"dfq_2: org.apache.spark.sql.DataFrame = [pays: string, evenement: int ... 4 more fields]\n"}]},"apps":[],"jobName":"paragraph_1581024445245_-387111390","id":"20200123-154418_495004097","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15084"},{"text":"z.show(spark.sql(\"\"\" SELECT * FROM query_2 LIMIT 10 \"\"\"))","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{"columns":[{"name":"pays","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"evenement","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"nombre_mentions","visible":true,"width":"*","sort":{"priority":0,"direction":"desc"},"filters":[{}],"pinned":""},{"name":"annee","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"date","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""},{"name":"mois_annee","visible":true,"width":"*","sort":{},"filters":[{}],"pinned":""}],"scrollFocus":{},"selection":[],"grouping":{"grouping":[],"aggregations":[],"rowExpandedStates":{}},"treeView":{},"pagination":{"paginationCurrentPage":1,"paginationPageSize":250}},"tableColumnTypeState":{"names":{"pays":"string","evenement":"string","nombre_mentions":"string","annee":"string","date":"string","mois_annee":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"pays","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"nombre_mentions","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"pays\tevenement\tnombre_mentions\tannee\tdate\tmois_annee\nRP\t893725724\t1\t2019\t2019/12/18\t2019/12\nUS\t893767427\t7\t2019\t2019/12/18\t2019/12\nTU\t891147794\t1\t2019\t2019/12/06\t2019/12\nMU\t890519363\t8\t2019\t2019/12/03\t2019/12\nPK\t890305344\t1\t2019\t2019/12/02\t2019/12\nIT\t892853744\t4\t2019\t2019/12/13\t2019/12\nGA\t891757432\t4\t2019\t2019/12/09\t2019/12\nDJ\t890347442\t1\t2019\t2019/12/02\t2019/12\nRS\t895985264\t11\t2019\t2019/12/31\t2019/12\nSF\t891532113\t1\t2019\t2019/12/08\t2019/12\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1581024445245_-1969633192","id":"20200123-155305_506592970","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15085"},{"text":"z.show(spark.sql(\"\"\" SELECT * FROM query_2 LIMIT 10 \"\"\"))","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"pays":"string","evenement":"string","nombre_mentions":"string","annee":"string","date":"string","mois_annee":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"pays","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"nombre_mentions","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"pays\tevenement\tnombre_mentions\tannee\tdate\tmois_annee\nIS\t894002720\t1\t2019\t2019/12/19\t2019/12\nML\t895217647\t4\t2019\t2019/12/26\t2019/12\nAS\t894139435\t2\t2019\t2019/12/20\t2019/12\nUK\t892420703\t18\t2019\t2019/12/12\t2019/12\nCA\t891506511\t1\t2019\t2019/12/07\t2019/12\nPL\t893799786\t4\t2019\t2019/12/18\t2019/12\nCA\t894361059\t2\t2019\t2019/12/21\t2019/12\nUK\t890244335\t1\t2019\t2019/12/02\t2019/12\nRS\t895927071\t16\t2019\t2019/12/31\t2019/12\nJA\t890531541\t12\t2019\t2019/12/03\t2019/12\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1581024445245_-1767187559","id":"20200123-175742_60315677","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15086"},{"text":"%md\n### Création de la table 3","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Création de la table 3</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1581024445245_227048651","id":"20200123-111322_740721111","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15087"},{"text":"c.withSessionDo ( session => session.execute(\"DROP TABLE gdelt.query3_liste\"))\nc.withSessionDo ( session => session.execute(\"CREATE TABLE gdelt.query3_liste (source text, date text, mois_annee text, annee int, collection_personnes text, collection_themes text, collection_lieux text, PRIMARY KEY (source))\"))","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res116: com.datastax.driver.core.ResultSet = ResultSet[ exhausted: true, Columns[]]\n"}]},"apps":[],"jobName":"paragraph_1581024445245_971441255","id":"20200123-111343_228658384","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15088"},{"text":"c.withSessionDo ( session => session.execute(\"DROP TABLE gdelt.query3_ton_pers\"))\nc.withSessionDo ( session => session.execute(\"CREATE TABLE gdelt.query3_ton_pers (source text, date text, mois_annee text, annee int, personne text, ton_moyen float, nombre_articles_personne int, PRIMARY KEY ((source), personne))\"))","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res117: com.datastax.driver.core.ResultSet = ResultSet[ exhausted: true, Columns[]]\n"}]},"apps":[],"jobName":"paragraph_1581024445246_-1533381593","id":"20200123-120511_2057730455","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15089"},{"text":"c.withSessionDo ( session => session.execute(\"DROP TABLE gdelt.query3_ton_them\"))\nc.withSessionDo ( session => session.execute(\"CREATE TABLE gdelt.query3_ton_them (source text, date text, mois_annee text, annee int, theme text, ton_moyen float, nombre_articles_theme int, PRIMARY KEY ((source), theme))\"))","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res137: com.datastax.driver.core.ResultSet = ResultSet[ exhausted: true, Columns[]]\n"}]},"apps":[],"jobName":"paragraph_1581024445246_-1065157505","id":"20200123-120758_405920770","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15090"},{"text":"c.withSessionDo ( session => session.execute(\"DROP TABLE gdelt.query3_ton_lieu\"))\nc.withSessionDo ( session => session.execute(\"CREATE TABLE gdelt.query3_ton_lieu (source text, date text, mois_annee text, annee int, lieu text, ton_moyen float, nombre_articles_lieu int, PRIMARY KEY ((source), lieu))\"))","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res119: com.datastax.driver.core.ResultSet = ResultSet[ exhausted: true, Columns[]]\n"}]},"apps":[],"jobName":"paragraph_1581024445246_-78688135","id":"20200123-120907_1149706587","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15091"},{"text":"%md\nChargement des données de la requête 3","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Chargement des données de la requête 3</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1581024445246_-1363828391","id":"20200123-151333_1081924958","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15092"},{"text":"%md\nquery3_liste","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>query3_liste</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1581024445246_1801293245","id":"20200123-151357_280115615","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15093"},{"text":"val question3DfParquet_1 = spark.read.parquet(\"s3a://hiroto-yamakawa-telecom-gdelt2019/question3Df_person_themes_locations.parquet\")","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"question3DfParquet_1: org.apache.spark.sql.DataFrame = [source: string, date: string ... 5 more fields]\n"}]},"apps":[],"jobName":"paragraph_1581024445246_-875389987","id":"20200123-151457_1311963141","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15094"},{"text":"question3DfParquet_1.write.cassandraFormat(\"query3_liste\", \"gdelt\").save()\nval dfq_3 = spark.read.cassandraFormat(\"query3_liste\", \"gdelt\").load()\ndfq_3.createOrReplaceTempView(\"query3_liste\")","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"dfq_3: org.apache.spark.sql.DataFrame = [source: string, annee: int ... 5 more fields]\n"}]},"apps":[],"jobName":"paragraph_1581024445246_1711519323","id":"20200123-151900_947705439","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15095"},{"text":"z.show(spark.sql(\"\"\" SELECT * FROM query3_liste LIMIT 10 \"\"\"))","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"source":"string","annee":"string","collection_lieux":"string","collection_personnes":"string","collection_themes":"string","date":"string","mois_annee":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"source\tannee\tcollection_lieux\tcollection_personnes\tcollection_themes\tdate\tmois_annee\nhromadske.ua\t2019\t[Moscow,Ukrainian,Berlin]\t[Oleg Sentsov]\t[POLITICAL_PRISONER,USPEC_POLITICS_GENERAL1,EPU_CATS_MIGRATION_FEAR_FEAR,TAX_WORLDLANGUAGES_ENGLISH,TAX_ETHNICITY_UKRAINIAN,UNGP_FORESTS_RIVERS_OCEANS,ARREST,EPU_POLICY_POLITICAL,TAX_ETHNICITY_EUROPEANS,TAX_WEAPONS_MORTARS,TAX_ETHNICITY_ENGLISH,TAX_ECON_PRICE,TAX_FNCACT_ORGANIZERS,TAX_WORLDLANGUAGES_UKRAINIAN,TAX_FNCACT_DIRECTOR]\t2019/12/08\t2019/12\naustraliangeographic.com.au\t2019\t[Cape York Peninsula,Australia,Sydney,United Kingdom,Australian Alps,Kosciuszko National Park]\t[Matt Kean,John Barilaro,Trevor Charles Graham Shutterstock,Richard Kirby Planktonpundit,Kirby Christmas,Don Driscoll,Euan Ritchie,David M Watson,Richard Kirby,David Watson]\t[WB_694_BROADCAST_AND_MEDIA,EDUCATION,WB_566_ENVIRONMENT_AND_NATURAL_RESOURCES,WB_621_HEALTH_NUTRITION_AND_POPULATION,WB_137_WATER,WB_1448_DEMOGRAPHIC_CHANGE,SOC_POINTSOFINTEREST_UNIVERSITY,WB_594_WETLANDS,TAX_ECON_PRICE,WB_1829_ECOSYSTEM_MANAGEMENT,WB_2432_FRAGILITY_CONFLICT_AND_VIOLENCE,WB_635_PUBLIC_HEALTH,WB_177_ANIMAL_PRODUCTION,WB_1833_PROTECTED_AREAS_SYSTEMS,WB_590_ECOSYSTEMS,WB_435_AGRICULTURE_AND_FOOD_SECURITY,TAX_FNCACT_BABY,CRISISLEX_O01_WEATHER,UNGP_FORESTS_RIVERS_OCEANS,EPU_POLICY_POLITICAL,TAX_WORLDMAMMALS_HORSE,WB_133_INFORMATION_AND_COMMUNICATION_TECHNOLOGIES,WB_1949_CLIMATE_SMART_AGRICULTURE,WB_2031_RIGHT_TO_INFORMATION,AFFECT,CRISISLEX_CRISISLEXREC,WATER_SECURITY,NATURAL_DISASTER_DROUGHT,TAX_ETHNICITY_BLACK,TAX_FNCACT_DEPUTY,USPEC_POLICY1,WB_1406_DISEASES,WB_2433_CONFLICT_AND_VIOLENCE,SCIENCE,WB_696_PUBLIC_SECTOR_MANAGEMENT,USPEC_POLITICS_GENERAL1,CLOSURE,TAX_WORLDFISH_FISH,TAX_DISEASE_STARVATION,WB_640_POPULATION_AND_DEMOGRAPHIC_CHANGE,SOC_POINTSOFINTEREST_SCHOOL,TAX_FNCACT_PROFESSOR,WB_1427_NON_COMMUNICABLE_DISEASE_AND_INJURY,TAX_WORLDMAMMALS_HUMAN,MANMADE_DISASTER_IMPLIED,KILL,WB_1428_INJURY,UNGP_CRIME_VIOLENCE,WB_1458_HEALTH_PROMOTION_AND_DISEASE_PREVENTION,MEDIA_MSM,WB_1541_DEWORMING,WB_503_SCHOOL_HEALTH,CRISISLEX_T03_DEAD,TAX_WORLDMAMMALS_RAT,TAX_FNCACT_SCIENTIST,POPULATION_DENSITY,EPU_POLICY_POLICY,WB_831_GOVERNANCE,TAX_ETHNICITY_AUSTRALIAN,TAX_WORLDMAMMALS_HORSES,WB_678_DIGITAL_GOVERNMENT,TAX_FOODSTAPLES_EGGS,WB_2194_ANIMAL_WELFARE,WB_3007_NATIONAL_PARKS,EPU_POLICY_GOVERNMENT,TAX_WORLDFISH_BASS,WB_837_OPEN_GOVERNMENT_AND_TRANSPARENCY,FOOD_SECURITY,GENERAL_GOVERNMENT,CRISISLEX_T02_INJURED,TAX_FNCACT_MINISTER]\t2019/12/16\t2019/12\nvl.no\t2019\t[Norwegian,Norway,Israeli,West Bank,China,Israelis,Norwegians]\t[Andr Erstad,Verena Hedvig Strem,Levi Henriksen,Sylvi Listhaug]\t[WB_694_BROADCAST_AND_MEDIA,WB_470_EDUCATION,TAX_RELIGION_JEWS,TAX_WORLDLANGUAGES_ENGLISH,EDUCATION,TAX_WORLDMAMMALS_BEAR,ARMEDCONFLICT,WB_621_HEALTH_NUTRITION_AND_POPULATION,WB_1462_WATER_SANITATION_AND_HYGIENE,TAX_FNCACT_EDITOR,TAX_ETHNICITY_ENGLISH,TAX_ECON_PRICE,WB_1540_ECONOMICS_OF_EDUCATION,TAX_ETHNICITY_MUSLIM,WB_933_ETHNIC_RELIGIOUS_AND_OTHER_MINORITIES,TAX_FNCACT_STUDENTS,TAX_FNCACT_INTERPRETERS,TAX_RELIGION_CHURCHES,WB_635_PUBLIC_HEALTH,TAX_FNCACT_RUNNER,WB_698_TRADE,TAX_FNCACT_LEADER,WB_2844_EMIGRATION,PROTEST,WB_2670_JOBS,REL_ISLAMIZATION,TAX_WORLDLANGUAGES_NORWEGIAN,TAX_WORLDMAMMALS_DRILL,TAX_RELIGION_MOSQUES,TAX_ETHNICITY_CHRISTIANS,TERROR,RELIGION,WB_2433_CONFLICT_AND_VIOLENCE,SOC_POINTSOFINTEREST_SCHOOLS,TAX_FNCACT_ASSISTANT,TAX_RELIGION_MUSLIMS,TAX_FNCACT_POLICE,EPU_POLICY_BUDGET,ELECTION,SOC_POINTSOFINTEREST_SCHOOL,TAX_WORLDLANGUAGES_NORWEGIANS,TAX_FNCACT_MINISTERS,TAX_WORLDMAMMALS_HUMAN,EXTREMISM,REFUGEES,UNGP_CRIME_VIOLENCE,TAX_FNCACT_CHIEF,EPU_POLICY_AUTHORITIES,TAX_ETHNICITY_MUSLIMS,DISPLACED,ECON_BOYCOTT,TAX_FNCACT_CONSERVATIONIST,LEGISLATION,WB_1490_PRIVATE_EDUCATION,WB_706_EVIDENCE_BASED_POLICY,WB_1668_LABOR_STANDARDS,TAX_RELIGION_CHRISTIANS,EPU_POLICY_LAW,WB_498_EDUCATION_FINANCE,EPU_ECONOMY_HISTORIC,WB_2203_HUMAN_RIGHTS,WB_855_LABOR_MARKETS,SOC_EXPRESSREGRET,TAX_ETHNICITY_JEHOVAH_WITNESSES,WB_697_SOCIAL_PROTECTION_AND_LABOR,CRISISLEX_C07_SAFETY,EPU_ECONOMY,TAX_ETHNICITY_JEWISH,HATE_SPEECH,TAX_FNCACT_CONDUCTOR,TAX_FNCACT_MUSICIAN,WB_2432_FRAGILITY_CONFLICT_AND_VIOLENCE,TRIAL,WB_1670_TRADE_UNIONS,TAX_FNCACT_AUTHORITIES,UNREST_SELF_IDENTIFIED_HATE_SPEECH,UNGP_FORESTS_RIVERS_OCEANS,EPU_POLICY_POLITICAL,WB_133_INFORMATION_AND_COMMUNICATION_TECHNOLOGIES,AFFECT,TAX_FNCACT_KING,WB_134_SOCIAL_DEVELOPMENT,TAX_ETHNICITY_NORWEGIANS,CRISISLEX_CRISISLEXREC,USPEC_POLICY1,TAX_RELIGION_JEHOVAH_WITNESSES,WB_695_POVERTY,USPEC_POLITICS_GENERAL1,TAX_FNCACT_EMPLOYEE,SELF_IDENTIFIED_HUMAN_RIGHTS,WB_421_SOCIAL_INCLUSION,SECURITY_SERVICES,TAX_RELIGION_MUSLIM,TAX_RELIGION_CHRISTIAN,TAX_DISEASE_DEFICIENCY,TAX_FNCACT_CHILDREN,MANMADE_DISASTER_IMPLIED,TAX_ETHNICITY_CHRISTIAN,WB_1948_SUBSIDIES,WB_1458_HEALTH_PROMOTION_AND_DISEASE_PREVENTION,MEDIA_MSM,TAX_DISEASE_STROKE,EPU_CATS_MIGRATION_FEAR_MIGRATION,IDEOLOGY,USPEC_UNCERTAINTY1,WB_2769_JOBS_STRATEGIES,TAX_FNCACT_SOLDIERS,TAX_RELIGION_MOSQUE,TAX_FNCACT_CHILD,WB_678_DIGITAL_GOVERNMENT,TAX_FNCACT_AUTHOR,ECON_UNIONS,ECON_SUBSIDIES,TAX_FNCACT_WOMAN,WB_2836_MIGRATION_POLICIES_AND_JOBS,EPU_POLICY_GOVERNMENT,GENERAL_GOVERNMENT,TAX_RELIGION_JEWISH,TAX_MILITARY_TITLE_SOLDIERS,MILITARY]\t2019/12/06\t2019/12\nmobihealthnews.com\t2019\t[France,Paris,Tel Aviv,Texas,Israeli,Houston]\t[Tina Smith,Stephen Hahn,Scott Gottlieb,Brett Giroir,Elizabeth Warren,Senseonic Eversense,Bradley Merrill Thompson,Patty Murray,Ned Sharpless]\t[WB_1433_DIABETES,WB_1156_MONITORING_AND_EVALUATION_SYSTEMS,EPU_CATS_HEALTHCARE,SOC_POINTSOFINTEREST_HOSPITAL,WB_670_ICT_SECURITY,WB_1331_HEALTH_TECHNOLOGIES,TAX_DISEASE_CHRONIC_PAIN,WB_1614_NUTRITIONAL_PROGRAMS,WB_621_HEALTH_NUTRITION_AND_POPULATION,WB_697_SOCIAL_PROTECTION_AND_LABOR,TAX_FNCACT_SPOKESPERSON,UNGP_HEALTHCARE,TAX_DISEASE_INSOMNIA,WB_2432_FRAGILITY_CONFLICT_AND_VIOLENCE,WB_838_PUBLIC_ACCOUNTABILITY_MECHANISMS,WB_635_PUBLIC_HEALTH,TAX_FNCACT_CANDIDATES,WB_1464_HEALTH_OF_THE_DISABLED,TAX_DISEASE_EPIDEMIC,WB_2166_HEALTH_EMERGENCY_PREPAREDNESS_AND_DISASTER_RESPONSE,UNGP_FORESTS_RIVERS_OCEANS,TAX_FNCACT_EXECUTIVE,CRISISLEX_C03_WELLBEING_HEALTH,WB_133_INFORMATION_AND_COMMUNICATION_TECHNOLOGIES,WB_2456_DRUGS_AND_NARCOTICS,WB_1431_CANCER,CRISISLEX_CRISISLEXREC,GENERAL_HEALTH,WB_1609_FOOD_AND_IN_KIND_TRANSFERS,EPU_POLICY_REGULATION,USPEC_POLICY1,WB_1615_THERAPEUTIC,EPU_POLICY_REGULATORY,TAX_FNCACT_COMMISSIONERS,WB_1406_DISEASES,WB_2433_CONFLICT_AND_VIOLENCE,TAX_DISEASE_ASTHMA,WB_2167_PANDEMICS,WB_695_POVERTY,USPEC_POLITICS_GENERAL1,WB_696_PUBLIC_SECTOR_MANAGEMENT,WB_2165_HEALTH_EMERGENCIES,TAX_DISEASE_KIDNEY_DISEASES,EPU_CATS_REGULATION,TAX_DISEASE_DIABETES,TAX_FNCACT_SENATORS,TAX_WORLDMAMMALS_ZEBRA,WB_2372_AUTHENTICATION_AND_AUTHORIZATION,TAX_CHRONICDISEASE_DIABETES,WB_1362_MEDICAL_EQUIPMENT,WB_1350_PHARMACEUTICALS,TAX_WORLDMAMMALS_HUMAN,WB_1427_NON_COMMUNICABLE_DISEASE_AND_INJURY,TAX_DISEASE_DISEASES,RESIGNATION,UNGP_CRIME_VIOLENCE,WB_2453_ORGANIZED_CRIME,WB_1458_HEALTH_PROMOTION_AND_DISEASE_PREVENTION,TAX_DISEASE_CANCER,TAX_FNCACT_CHIEF,WB_1466_SOCIAL_ASSISTANCE,WB_1324_EMERGENCY_MEDICAL_SERVICES,EPU_CATS_MIGRATION_FEAR_FEAR,TAX_DISEASE_PLEURAL_EFFUSION,TAX_DISEASE_DEPRESSION,MEDICAL,WB_831_GOVERNANCE,LEGISLATION,TAX_FNCACT_PILOT,WB_706_EVIDENCE_BASED_POLICY,WB_678_DIGITAL_GOVERNMENT,TAX_CHRONICDISEASE_ASTHMA,EPU_POLICY_LAW,TECH_AUTOMATION,EPU_ECONOMY_HISTORIC]\t2019/12/30\t2019/12\nalleywatch.com\t2019\t[Wellington,India,Phoenix,New York,Toronto,London,Saudi Arabia]\t[Alok Bansal,Martin Zwilling,Travis Kalanick,Ma Xuguang,Daniel Magnuszewski,David Wadler,Dave Teare,Stephen Curry,Neeti Mehta,Dayong Li,Milda Mitkute,Marc Benioff,Min Chen,Sachin Bansal,Assaf Feldman,Eido Gal,Li Ji,Raj Dutt Grafana,Jack Greco,Joseph Neiman,Roustem Karimov,Varun Agni,Peter Bonney,Ankur Kothari,Mihir Shukla,Dan Lewis,Brittany Stich,Rachel Carlson,Yashish Dahiya,Scott Farquhar]\t[WB_841_JUSTICE_SYSTEM_ADMINISTRATION,WB_1920_FINANCIAL_SECTOR_DEVELOPMENT,WB_2945_DATABASE,WB_694_BROADCAST_AND_MEDIA,WB_470_EDUCATION,EPU_CATS_HEALTHCARE,WB_1331_HEALTH_TECHNOLOGIES,EDUCATION,WB_566_ENVIRONMENT_AND_NATURAL_RESOURCES,TAX_FNCACT_MANAGER,TAX_FNCACT_FOUNDER,WB_1484_EDUCATION_SKILLS_DEVELOPMENT_AND_LABOR_MARKET,WB_621_HEALTH_NUTRITION_AND_POPULATION,TAX_ECON_PRICE,TAX_FNCACT_EMPLOYERS,WB_657_INTEROPERABILITY,WB_2048_COMPENSATION_CAREERS_AND_INCENTIVES,TAX_FNCACT_MANAGERS,WB_625_HEALTH_ECONOMICS_AND_FINANCE,WB_2375_ICT_METHODS_AND_PROCEDURES,WB_590_ECOSYSTEMS,WB_435_AGRICULTURE_AND_FOOD_SECURITY,WB_667_ICT_INFRASTRUCTURE,WB_2670_JOBS,WB_341_INVESTMENT_FUNDS,TAX_FNCACT_GUIDE,CRISISLEX_C03_WELLBEING_HEALTH,WB_2690_CATEGORIES_OF_EMPLOYMENT,ECON_DEBT,GENERAL_HEALTH,EPU_POLICY_PUBLIC_INVESTMENT,ECON_HOUSING_PRICES,WB_450_DEBT,TAX_FNCACT_LEADERS,WB_1211_HUMAN_RESOURCES,EPU_POLICY_BUDGET,TAX_FNCACT_BUSINESS_LEADERS,WB_2133_QUALIFICATION_FRAMEWORKS,WB_2020_BRIBERY_FRAUD_AND_COLLUSION,TAX_FNCACT_EMPLOYEES,WB_1104_MACROECONOMIC_VULNERABILITY_AND_DEBT,NEW_CONSTRUCTION,TAX_FNCACT_FOUNDERS,WB_1350_PHARMACEUTICALS,TAX_WORLDMAMMALS_HUMAN,TAX_WORLDMAMMALS_TIGER,WB_1287_HEALTH_INSURANCE,TAX_FNCACT_PRINCIPAL,TAX_FNCACT_ENGINEER,WB_723_PUBLIC_ADMINISTRATION,TAX_DISEASE_DISRUPTIVE,WB_793_TRANSPORT_AND_LOGISTICS_SERVICES,TAX_FNCACT_NURSES,CYBER_ATTACK,WB_2019_ANTI_CORRUPTION_LEGISLATION,WB_831_GOVERNANCE,WB_2704_EMPLOYER,TAX_FNCACT_ENTREPRENEUR,TECH_AUTOMATION,CRISISLEX_T08_MISSINGFOUNDTRAPPEDPEOPLE,EPU_ECONOMY_HISTORIC,TAX_FNCACT_INVESTOR,TAX_WORLDLANGUAGES_BAIN,WB_670_ICT_SECURITY,WB_1353_PHARMACEUTICAL_SUPPLY_CHAIN,WB_652_ICT_APPLICATIONS,WB_484_LIFELONG_LEARNING,WB_1967_AGRICULTURAL_RISK_AND_SECURITY,WB_2363_MOBILE_APPLICATIONS,TAX_FNCACT_VICTIMS,WB_662_SOCIAL_MEDIA,TAX_FNCACT_SCOUT,CRISISLEX_C07_SAFETY,ECON_ENTREPRENEURSHIP,WB_135_TRANSPORT,WB_2737_EMPLOYEE_BENEFITS,TAX_FNCACT_PEERS,WB_669_SOFTWARE_INFRASTRUCTURE,UNGP_FORESTS_RIVERS_OCEANS,WB_332_CAPITAL_MARKETS,WB_794_FREIGHT_SERVICES,WB_2822_LIFELONG_EDUCATION,WB_133_INFORMATION_AND_COMMUNICATION_TECHNOLOGIES,AFFECT,ECON_WORLDCURRENCIES_DOLLARS,EPU_POLICY_SPENDING,CRISISLEX_CRISISLEXREC,AGRICULTURE,WB_286_TELECOMMUNICATIONS_AND_BROADBAND_ACCESS,WB_1973_FINANCIAL_RISK_REDUCTION,USPEC_POLICY1,WB_337_INSURANCE,WB_840_JUSTICE,SCIENCE,TAX_FNCACT_VENDOR,WB_696_PUBLIC_SECTOR_MANAGEMENT,TAX_FNCACT_EMPLOYEE,WB_1358_GENERIC_DRUGS,TAX_FNCACT_INCUMBENT,WB_832_ANTI_CORRUPTION,WB_2736_RETURNS_TO_WORK,MEDIA_SOCIAL,WB_653_ENTERPRISE_ARCHITECTURE,WB_288_TELECOMMUNICATIONS_SECTOR_POLICY_AND_REGULATION,MANMADE_DISASTER_IMPLIED,TAX_WORLDFISH_MONKFISH,WB_336_NON_BANK_FINANCIAL_INSTITUTIONS,WB_1467_EDUCATION_FOR_ALL,WB_665_SOFTWARE_AS_A_SERVICE,CORRUPTION,IDEOLOGY,MEDICAL,WB_724_HUMAN_RESOURCES_FOR_PUBLIC_SECTOR,WB_678_DIGITAL_GOVERNMENT,WB_290_TELECOMMUNICATIONS_ORGANIZATIONAL_DESIGN,TAX_FNCACT_DEALER,TAX_FNCACT_NAVIGATORS,WB_483_VOCATIONAL_EDUCATION_AND_TRAINING,EPU_UNCERTAINTY,WB_2689_JOBS_DIAGNOSTICS,WB_658_ENTERPRISE_APPLICATIONS,WB_478_LEVELS_OF_EDUCATION]\t2019/12/05\t2019/12\nfolhanit.com.br\t2019\t[Icara,United Kingdom,Sao Francisco,Campo De Sao Bento,Brazilian,Sao Bento]\t[Eleanor Rigby]\t[TAX_FNCACT_CHILDREN,TAX_FNCACT_STUDENTS,TAX_WORLDFISH_BASS,EDUCATION,MANMADE_DISASTER_IMPLIED,UNGP_FORESTS_RIVERS_OCEANS,TAX_FNCACT_APPRENTICE,KILL,MEDIA_MSM,SOC_POINTSOFINTEREST_SCHOOL]\t2019/12/04\t2019/12\nmavsmoneyball.com\t2019\t[Hollywood,Dallas]\t[Lebron James,Anthony Davis,Javale Mcgee,Avery Bradley,Seth Curry,Luka Doncic,Los Angeles,Dwight Howard,Los Angeles Lakers,Rick Carlisle,Tim Hardaway Jr]\t[TAX_FNCACT_WARRIORS,MEDIA_MSM]\t2019/12/30\t2019/12\n6000.co.za\t2019\t[Portugal,Turkish,Scotland,United Kingdom,Ireland,Turkey]\t[Boris Johnson]\t[USPEC_POLITICS_GENERAL1,WB_694_BROADCAST_AND_MEDIA,WB_566_ENVIRONMENT_AND_NATURAL_RESOURCES,WB_652_ICT_APPLICATIONS,WB_621_HEALTH_NUTRITION_AND_POPULATION,WB_137_WATER,WB_1462_WATER_SANITATION_AND_HYGIENE,ELECTION,WB_662_SOCIAL_MEDIA,EPU_ECONOMY,MEDIA_SOCIAL,RATIFY,WB_1777_FORESTS,WB_1000_WATER_MANAGEMENT_STRUCTURES,WB_635_PUBLIC_HEALTH,WB_141_WATER_RESOURCES_MANAGEMENT,TAX_FNCACT_LEADER,WB_1458_HEALTH_PROMOTION_AND_DISEASE_PREVENTION,MEDIA_MSM,WB_590_ECOSYSTEMS,TAX_WORLDLANGUAGES_TURKISH,UNGP_FORESTS_RIVERS_OCEANS,EPU_POLICY_POLICY,WB_133_INFORMATION_AND_COMMUNICATION_TECHNOLOGIES,WB_678_DIGITAL_GOVERNMENT,CRISISLEX_CRISISLEXREC,TAX_ETHNICITY_TURKISH,USPEC_POLICY1,WB_988_LEVEES,REL_ANTISEMITISM,WB_658_ENTERPRISE_APPLICATIONS,EPU_ECONOMY_HISTORIC]\t2019/12/13\t2019/12\nforlitoday.it\t2019\t[Italian,Italy,Rome,Apennines,French,Emilia Romagna,Cesenatico,Emilia-Romagna,Rimini,Netherlands]\t[John Round,Christian States,Archangel Michele,Luke Zattini,Lucia Borgonzoni,Damiana Myrtle,Daniele Mezzacapo,Stefano Bonaccini,Martina Mambelli,Henry Sirotti]\t[WB_470_EDUCATION,WB_507_ENERGY_AND_EXTRACTIVES,SOC_POLARIZED,TAX_FNCACT_MAYOR,EDUCATION,WB_1331_HEALTH_TECHNOLOGIES,TAX_WORLDMAMMALS_BEAR,WB_566_ENVIRONMENT_AND_NATURAL_RESOURCES,TAX_FNCACT_POLITICIAN,EPU_CATS_TAXES,WB_621_HEALTH_NUTRITION_AND_POPULATION,WB_137_WATER,TAX_FNCACT_SPEAKER,WB_1484_EDUCATION_SKILLS_DEVELOPMENT_AND_LABOR_MARKET,TAX_DISEASE_FARSIGHTEDNESS,WB_2531_INSPECTIONS_LICENSING_AND_PERMITS,WB_1448_DEMOGRAPHIC_CHANGE,POVERTY,TAX_ECON_PRICE,WB_1618_FOOD_DISTRIBUTION,UNGP_HEALTHCARE,TAX_FNCACT_VOLUNTEERS,SOC_POINTSOFINTEREST_MIDDLE_SCHOOL,WB_2048_COMPENSATION_CAREERS_AND_INCENTIVES,WB_635_PUBLIC_HEALTH,WB_698_TRADE,TAX_ETHNICITY_BLACKS,TAX_FNCACT_PSYCHOLOGIST,PROTEST,WB_2530_BUSINESS_ENVIRONMENT,WB_1039_PROPERTY_LAWS_AND_REGULATIONS,WB_590_ECOSYSTEMS,WB_435_AGRICULTURE_AND_FOOD_SECURITY,WB_667_ICT_INFRASTRUCTURE,WB_2670_JOBS,TAX_FNCACT_GUIDE,WB_533_ENERGY_EFFICIENCY,CRISISLEX_C03_WELLBEING_HEALTH,GENERAL_HEALTH,EPU_POLICY_TAX,WB_1609_FOOD_AND_IN_KIND_TRANSFERS,WB_2837_IMMIGRATION,WB_1121_TAXATION,LEADER,TAX_FNCACT_DEPUTY,WB_845_LEGAL_AND_REGULATORY_FRAMEWORK,WB_2433_CONFLICT_AND_VIOLENCE,SOC_POINTSOFINTEREST_SCHOOLS,TAX_FNCACT_CHEF,WB_167_PORTS,TAX_FNCACT_DIRECTOR,WB_1042_TRADEMARKS,TAX_FNCACT_GOVERNOR,TAX_FNCACT_MERCHANT,UNGP_FREEDOM_FROM_DISCRIMINATION,WB_851_INTELLECTUAL_PROPERTY_RIGHTS,TAX_FNCACT_CANDIDATE,TAX_DISEASE_MENINGITIS,ECON_TAXATION,ELECTION,SOC_POINTSOFINTEREST_SCHOOL,TAX_FNCACT_WINE_STEWARD,TAX_FNCACT_DESIGNER,TAX_FNCACT_ORGANIZERS,ALLIANCE,TAX_FNCACT_COORDINATOR,ENV_WATERWAYS,WB_1921_PRIVATE_SECTOR_DEVELOPMENT,TAX_FNCACT_MONK,WB_1350_PHARMACEUTICALS,TAX_WORLDMAMMALS_HUMAN,WB_1786_ENVIRONMENTAL_SUSTAINABILITY,TAX_FNCACT_QUEEN,WB_2453_ORGANIZED_CRIME,TAX_FNCACT_BLACKSMITHS,TAX_WORLDBIRDS_WARBLER,WB_2745_JOB_QUALITY_AND_LABOR_MARKET_PERFORMANCE,TAX_FNCACT_TRADERS,WB_723_PUBLIC_ADMINISTRATION,WB_503_SCHOOL_HEALTH,ECON_STOCKMARKET,TAX_ETHNICITY_ITALIAN,CRISISLEX_C04_LOGISTICS_TRANSPORT,WB_439_MACROECONOMIC_AND_STRUCTURAL_POLICIES,TAX_WORLDLANGUAGES_ITALIAN,LEGISLATION,TAX_WORLDMAMMALS_HORSES,SOC_POINTSOFINTEREST_COLLEGE,TAX_RELIGION_CHURCH,TAX_FNCACT_CITIZENS,EPU_POLICY_LAW,CRISISLEX_T02_INJURED,TAX_FNCACT_PRESIDENT,TAX_FNCACT_CHAIRMAN_OF_THE_BOARD,SLFID_ECONOMIC_DEVELOPMENT,WB_405_BUSINESS_CLIMATE,TAX_FNCACT_ADMINISTRATORS,TAX_FNCACT_COMEDIAN,EPU_ECONOMY_HISTORIC,TAX_FNCACT_FATHER,SOC_POINTSOFINTEREST_HOSPITAL,TAX_FNCACT_CRAFTSMEN,WB_670_ICT_SECURITY,NATURAL_DISASTER_FLOODS,TAX_FNCACT_SUPPORTERS,SOC_POINTSOFINTEREST_UNIVERSITY,TAX_FNCACT_WOMEN,WB_697_SOCIAL_PROTECTION_AND_LABOR,DISABILITY,CRISISLEX_C07_SAFETY,EPU_ECONOMY,GEN_HOLIDAY,RATIFY,WB_2432_FRAGILITY_CONFLICT_AND_VIOLENCE,WB_135_TRANSPORT,REBELLION,WB_1979_NATURAL_RESOURCE_MANAGEMENT,TAX_FNCACT_CANDIDATES,TAX_FNCACT_WORKERS,CRISISLEX_T11_UPDATESSYMPATHY,UNGP_FORESTS_RIVERS_OCEANS,TAX_ETHNICITY_FRENCH,BAN,TAX_FNCACT_EXECUTIVE,WB_133_INFORMATION_AND_COMMUNICATION_TECHNOLOGIES,WB_2456_DRUGS_AND_NARCOTICS,TAX_FNCACT_CHAIRMAN,TAX_FNCACT_BUYER,SOC_INNOVATION,TAX_FNCACT_STEWARD,CRISISLEX_CRISISLEXREC,AGRICULTURE,IMMIGRATION,TAX_FNCACT_PROPHET,WB_1620_ELDERLY,CRISISLEX_T01_CAUTION_ADVICE,TAX_FNCACT_DOCTORS,USPEC_POLICY1,WOUND,DISCRIMINATION,WB_840_JUSTICE,SCIENCE,TAX_FNCACT_EXECUTIVE_CHEF,WB_695_POVERTY,WB_1986_MOUNTAINS,USPEC_POLITICS_GENERAL1,WB_696_PUBLIC_SECTOR_MANAGEMENT,TAX_FNCACT_ARTISTS,TAX_FNCACT_SERVANTS,WB_2131_EMPLOYABILITY_SKILLS_AND_JOBS,MOVEMENT_GENERAL,DELAY,DRUG_TRADE,WB_2747_UNEMPLOYMENT,WB_445_FISCAL_POLICY,WB_2372_AUTHENTICATION_AND_AUTHORIZATION,UNEMPLOYMENT,TAX_FNCACT_ADMINISTRATIVE_OFFICIAL,WB_672_NETWORK_MANAGEMENT,TAX_FNCACT_PATRICIAN,TAX_RELIGION_CHRISTIAN,URBAN,TAX_FNCACT_PROFESSOR,TAX_FNCACT_COSTUME_DESIGNER,TAX_WORLDMAMMALS_CAT,TAX_FNCACT_CHILDREN,MANMADE_DISASTER_IMPLIED,TAX_WORLDLANGUAGES_FRENCH,TAX_ETHNICITY_CHRISTIAN,WB_1777_FORESTS,WB_1122_TAX_EXPENDITURES,KILL,WB_643_AGING_POPULATION,WB_1458_HEALTH_PROMOTION_AND_DISEASE_PREVENTION,UNGP_JOB_OPPORTUNITIES_EMPLOYMENT,MEDIA_MSM,EPU_CATS_MIGRATION_FEAR_MIGRATION,WB_1467_EDUCATION_FOR_ALL,EPU_CATS_MIGRATION_FEAR_FEAR,WB_1466_SOCIAL_ASSISTANCE,CORRUPTION,APPOINTMENT,IDEOLOGY,WB_1541_DEWORMING,CRISISLEX_T03_DEAD,USPEC_UNCERTAINTY1,MEDICAL,WB_2769_JOBS_STRATEGIES,WB_724_HUMAN_RESOURCES_FOR_PUBLIC_SECTOR,TAX_RELIGION_CHRISTIANITY,TAX_FNCACT_CHILD,TAX_FNCACT_COMMISSIONER,WB_678_DIGITAL_GOVERNMENT,WB_1805_WATERWAYS,TAX_FNCACT_WOMAN,WB_2836_MIGRATION_POLICIES_AND_JOBS,TAX_FNCACT_OFFICIAL,EPU_POLICY_GOVERNMENT,WB_2943_SWITCHES,GENERAL_GOVERNMENT,WB_1803_TRANSPORT_INFRASTRUCTURE,WB_2689_JOBS_DIAGNOSTICS,MARITIME,TAX_FNCACT_ACTIVISTS,TAX_FNCACT_SHOPKEEPER]\t2019/12/27\t2019/12\nyeovilexpress.co.uk\t2019\t[British,Wellington,Michigan,Stawley,Buckingham Palace,Greek,Kalamata,Bellshill,Northern Ireland,Moroccan,Hyde Park,Andover,Celtic Sea,United Kingdom,Dundonald,Russia,Shanghai,White House,America,Belfast,Lewisham,Florida,Italian,Ukraine,North Sea,Nuffield,Renfrewshire,Hampshire,Mali,Netherlands,Templecombe,Milan,Norway,German,Wembley,London,Faroe Islands,Yeovil,Times Square,Scotland,Cambridge,Gloucestershire,Greece,Western Channel,Wigan,Glasgow,Finsbury,Chinese,Spaxton,Nottingham,Massachusetts,Norton Fitzwarren,Paris,Americans,Enniskillen,Capitol Hill,East Lothian,China,Gatwick,Great Grimsby,American,Islington,Austria,Irish Sea,Fermanagh,French,Ireland,Edinburgh,Iowa,Britain,Irish,Perth,Ilford,Crewkerne,Brighton,New York,Ukrainian,Bridgwater,Prestonpans]\t[Justice Yip,Michael Walsh,Rachel Reeves,Iain Duncan Smith,Simon Hamilton,Boris Johnson Brexit,Kerry Hooper-Cross,Lucy-Anne Rushton,Justice Sweeney,Pat Conroy,Mitch Mcconnell,Richard Pengelly,Lisa Nandy,Jonathan Ashworth,Donald Brydon,Gregory Berns,Joanne Stephenson,Thomas Cook,Thanassis Vassilopoulos,Fiona Hanson,Helen Stapleton,Dave Bulmer,Dame Donna Kinnair,Ellie Reeves,Steven Bonnar,Scott Burns,Kirsti Neilson,Hannah Bardell,Pat Cullen,Chrysler John Elkann,Jeremy Corbyn,Sinn Fein,Sara Imarisio,Rachel Reeves Danny Lawson,Rachel Mitchell,Caroline Flack,Theresa May,Kevin Mccarthy,Andy Biggs,Yui Mok,Dame Margaret Hodge,Jo Howarth,Deirdre Gilpin,Farah Roslan,Victor Kang,Stella Lourenco,Joe Biden,Chuck Schumer,Lance Corporal Jeffrey Young,Simon Jones,Jose Bengoechea,Ronan Harris,Yvette Cooper,Jess Phillips,Jada Bailey,Jess Phillips Dominic Lipinski,Anne Mclaughlin,Cllr Melissa Whittaker-Mather,Wales Rui Vieira,Nancy Pelosi,John Kingman,Josh Taylor,Walter Federle,Luke Perry,Shaun Dyson,Jacob Rees-Mogg,Regis Prograis,Carlo Tavares,Rebecca Austin,Dominic Lipinski,Peter Hajek,Seumas Milne,Sergio Marchionne,Gavin Newlands Paisley,Volodymyr Zelenskiy,Jaden Moodie Jaden Moodie,George Eustice,Chris Packham,Kirsty Blackman Aberdeen,Matt Rourke,Lesley Griffiths,Stephen Baker,Claire Hanna,Joe Giddens,Pablo Martinez Monsivais,Jamie Njoku-Goodwin,Jaden Moodie,Michelle Oneill,Nicola Sturgeon,Jim Wells,Ayoub Majdouline,Alfred Johnston,Jim Mcgovern,Coatbridge Chryston,Edel Coulter,Tom Cole,Jacqui Collier,Sharon Douglass,Boris Johnson,Robert Halfon,Dennis Daly,Emily Thornberry,Iain Duncan Smith Brexit,Steve Heapey,Lucy Rushton,Alec Taylor,Cllr Cath Morrison,Mike Manley,Julian Smith,Mike Park,Keir Starmer,Peter Kyle,Matt Hancock,Lauren Aulet,Donald Trump,Sarah Floud,Steve Aiken,Mary Creagh,Gill Tierney,Andrea Coscelli,John Downey,Queen Elizabeth,James Eames,Allan Hodgson,Cllr Bulmer,Andrew Tumilson,Lindsay Hoyle,Tony Blair]\t[TAX_FNCACT_DOORMAN,TAX_WORLDMAMMALS_HUMANS,TAX_ETHNICITY_UKRAINIAN,WB_137_WATER,CRISISLEX_C05_NEED_OF_SHELTERS,TAX_ETHNICITY_AMERICANS,TAX_FNCACT_VICE_PRESIDENT,TAX_FNCACT_SPOKESPERSON,TAX_ECON_PRICE,WB_1618_FOOD_DISTRIBUTION,SELF_IDENTIFIED_HUMANITARIAN_CRISIS,TAX_FNCACT_STUDENTS,TAX_FNCACT_CHAMPIONS,TAX_FNCACT_POLITICAL_LEADERS,WB_567_CLIMATE_CHANGE,TAX_RELIGION_BAPTIST,CRISISLEX_O01_WEATHER,TAX_FNCACT_TRIAL_JUDGE,ECON_DEBT,GENERAL_HEALTH,WB_845_LEGAL_AND_REGULATORY_FRAMEWORK,WB_2490_NATIONAL_PROTECTION_AND_SECURITY,MARITIME_INCIDENT,TAX_WORLDLANGUAGES_GERMAN,WB_866_CONNECTIVITY_AND_LAGGING_REGIONS,NEW_CONSTRUCTION,TAX_FNCACT_MINISTERS,TAX_DISEASE_BACTERIAL,TAX_FNCACT_QUEEN,EXTREMISM,TAX_FNCACT_TRADERS,TAX_FNCACT_DEMONSTRATOR,EPU_POLICY_AUTHORITIES,TAX_FNCACT_COOK,TAX_FNCACT_GUARD,TAX_FNCACT_SURGEONS,NATURAL_DISASTER_FLOODING,RETIREMENT,TAX_FNCACT_NURSES,EPU_POLICY_POLICY,TAX_FNCACT_SPECIALIST,WB_831_GOVERNANCE,SOC_POINTSOFINTEREST_COLLEGE,WB_1430_MENTAL_HEALTH,TAX_FNCACT_SUPPORTER,TAX_FNCACT_CITIZENS,WB_1070_ECONOMIC_GROWTH_POLICY,TAX_FNCACT_PRESIDENT,DEMOCRACY,TAX_POLITICAL_PARTY_LABOUR_MP,TAX_FNCACT_PRODUCER,EPU_ECONOMY_HISTORIC,TAX_FNCACT_PROSECUTOR,WB_855_LABOR_MARKETS,SOC_EXPRESSREGRET,WB_652_ICT_APPLICATIONS,WB_1967_AGRICULTURAL_RISK_AND_SECURITY,SOC_EMERGINGTECH,TAX_FNCACT_WOMEN,TAX_FNCACT_QUARTERMASTER,TAX_FNCACT_CHIEF_EXECUTIVE,TAX_DISEASE_INFECTION,TAX_FNCACT_POLITICIANS,WB_1670_TRADE_UNIONS,TAX_FNCACT_AUTHORITIES,WB_1455_MIDWIVES,ACT_MAKESTATEMENT,TAX_FNCACT_WORKERS,TAX_WORLDLANGUAGES_JAPANESE,EPU_POLICY_POLITICAL,TAX_FNCACT_ADVERTISER,WB_133_INFORMATION_AND_COMMUNICATION_TECHNOLOGIES,WB_2456_DRUGS_AND_NARCOTICS,TAX_FNCACT_BOXER,TAX_ETHNICITY_BLACK,AUSTERITY,EPU_POLICY_REGULATORY,SCIENCE,RECRUITMENT,WB_2511_SLAVERY,TAX_FNCACT_SERVANTS,WB_695_POVERTY,WB_696_PUBLIC_SECTOR_MANAGEMENT,TAX_WORLDFISH_FISH,WB_2747_UNEMPLOYMENT,WB_2507_HUMAN_RIGHTS_ABUSES_AND_VIOLATIONS,TAX_FNCACT_WITCH,WB_1358_GENERIC_DRUGS,TAX_ETHNICITY_CHINESE,TAX_FNCACT_SECRETARY,WB_1074_FISCAL_CONTRACTION,MEDIA_SOCIAL,MANMADE_DISASTER_IMPLIED,TAX_WORLDLANGUAGES_FRENCH,WB_1017_CONSUMER_PROTECTION_LAW,TAX_DISEASE_DISEASES,WB_1174_WAREHOUSING_AND_STORAGE,UNGP_JOB_OPPORTUNITIES_EMPLOYMENT,EPU_CATS_MIGRATION_FEAR_FEAR,CORRUPTION,USPEC_UNCERTAINTY1,MEDICAL,TAX_CHRONICDISEASE_ALZHEIMER,TAX_FNCACT_OFFICIAL,EPU_POLICY_GOVERNMENT,TAX_MILITARY_TITLE_SOLDIERS,NATURAL_DISASTER_VOLCANO,EPU_POLICY_WHITE_HOUSE,EDUCATION,TAX_FNCACT_BARRISTER,TAX_FNCACT_SPEAKER,WB_1462_WATER_SANITATION_AND_HYGIENE,TAX_FNCACT_ANALYSTS,WB_1448_DEMOGRAPHIC_CHANGE,TAX_FNCACT_KILLERS,TAX_ETHNICITY_MUSLIM,WB_2048_COMPENSATION_CAREERS_AND_INCENTIVES,WB_635_PUBLIC_HEALTH,TAX_FNCACT_LEADER,PROTEST,WB_435_AGRICULTURE_AND_FOOD_SECURITY,WB_1281_MANUFACTURING,WB_639_REPRODUCTIVE_MATERNAL_AND_CHILD_HEALTH,TAX_WORLDMAMMALS_HORSE,EPU_POLICY_TAX,LEADER,TAX_FNCACT_DEPUTY,TAX_DISEASE_DISEASE,TAX_FNCACT_LEADERS,TAX_DISEASE_WOUNDS,TAX_DISEASE_OBESITY,TAX_FNCACT_CANDIDATE,WB_2020_BRIBERY_FRAUD_AND_COLLUSION,ECON_FREETRADE,CRISISLEX_O02_RESPONSEAGENCIESATCRISIS,WB_1104_MACROECONOMIC_VULNERABILITY_AND_DEBT,TAX_WORLDMAMMALS_DOG,IMPEACHMENT,ALLIANCE,ENV_OVERFISH,WB_818_INDUSTRY_POLICY_AND_REAL_SECTORS,TAX_FNCACT_CONTRACTOR,TAX_DISEASE_PULMONARY_DISEASE,SOC_SLAVERY,WB_723_PUBLIC_ADMINISTRATION,TAX_FNCACT_TROOPER,CYBER_ATTACK,TAX_RELIGION_CHURCH_OF_ENGLAND,WB_2019_ANTI_CORRUPTION_LEGISLATION,TAX_WORLDLANGUAGES_ITALIAN,NATURAL_DISASTER_HEAVY_RAIN,WB_1668_LABOR_STANDARDS,WB_2445_NON_STATE_SECURITY_ACTORS,TAX_POLITICAL_PARTY_SINN_FEIN,TAX_FNCACT_BOUNCER,TAX_FNCACT_CRIMINAL,TAX_FNCACT_DRIVER,WB_2091_SENIOR_CIVIL_SERVANTS,TAX_FNCACT_INVESTOR,SOC_POINTSOFINTEREST_HOSPITAL,WB_2203_HUMAN_RIGHTS,TAX_FNCACT_STUDENT,TAX_FNCACT_SUPPORTERS,ARREST,TAX_FNCACT_ADVISER,TAX_FNCACT_VICTIMS,TAX_WORLDLANGUAGES_IRISH,WB_843_DISPUTE_RESOLUTION,WB_662_SOCIAL_MEDIA,DISABILITY,EPU_ECONOMY,SHORTAGE,TAX_FNCACT_MIDWIFE,TAX_WEAPONS_BOMB,WB_2432_FRAGILITY_CONFLICT_AND_VIOLENCE,TRIAL,WB_963_NATURAL_RESOURCES_LAW,TAX_FNCACT_CANDIDATES,TAX_DISEASE_AMNESIA,WB_2024_ANTI_CORRUPTION_AUTHORITIES,WB_2452_GANGS,BAN,TAX_FNCACT_EXECUTIVE,EPU_POLICY_LEGISLATION,TAX_FNCACT_FISHERMEN,WB_631_HUMAN_RESOURCES_FOR_HEALTH,TAX_FNCACT_KING,WB_134_SOCIAL_DEVELOPMENT,TAX_FNCACT_DOCTORS,CRISISLEX_T01_CAUTION_ADVICE,WB_1973_FINANCIAL_RISK_REDUCTION,TAX_FNCACT_REPRESENTATIVES,TAX_WORLDLANGUAGES_CHINESE,ENV_CLIMATECHANGE,UNGP_EDUCATION,MILITARY_COOPERATION,WB_840_JUSTICE,WB_2131_EMPLOYABILITY_SKILLS_AND_JOBS,TAX_FNCACT_PRIME_MINISTER,TAX_FNCACT_MIDWIVES,TAX_FNCACT_JUSTICIARY,WB_1014_CRIMINAL_JUSTICE,EPU_CATS_NATIONAL_SECURITY,TAX_FNCACT_OFFICIALS,TAX_FNCACT_CHILDREN,ECON_WORLDCURRENCIES_EURO,TAX_POLITICAL_PARTY_LIBERAL_DEMOCRATS,KILL,TAX_POLITICAL_PARTY_DEMOCRAT,WB_1458_HEALTH_PROMOTION_AND_DISEASE_PREVENTION,TAX_DISEASE_CANCER,TAX_ETHNICITY_MALI,TAX_FNCACT_JUDGE,WB_1466_SOCIAL_ASSISTANCE,APPOINTMENT,CRIME_ILLEGAL_DRUGS,TAX_FNCACT_JOURNALIST,TAX_FNCACT_VICTIM,TAX_DISEASE_BODY_WEIGHT,SOC_POINTSOFINTEREST_PRISON,ECON_UNIONS,TAX_ETHNICITY_GERMAN,TAX_FNCACT_PARAMEDICS,TAX_FNCACT_DEALER,WB_2943_SWITCHES,TAX_FNCACT_TRAVEL_AGENT,TAX_DISEASE_BACTERIAL_INFECTIONS,WB_694_BROADCAST_AND_MEDIA,TAX_FNCACT_MAYOR,WB_1331_HEALTH_TECHNOLOGIES,TAX_WORLDMAMMALS_BEAR,EPU_CATS_TAXES,TAX_FNCACT_LAWYERS,TAX_FNCACT_CHAPLAIN,TAX_DISEASE_ALZHEIMER,UNGP_HEALTHCARE,TAX_WORLDLANGUAGES_UKRAINIAN,TAX_POLITICAL_PARTY_REPUBLICAN_PARTY,WB_698_TRADE,SOC_POINTSOFINTEREST_AIRPORT,TAX_FOODSTAPLES_MILK,TAX_TERROR_GROUP_SINN_FEIN,TAX_FNCACT_CABINET_MINISTER,WB_667_ICT_INFRASTRUCTURE,WB_1072_FISCAL_POLICY_AND_GROWTH,WB_2670_JOBS,CRISISLEX_C03_WELLBEING_HEALTH,TAX_FNCACT_VETERAN,TAX_WORLDFISH_COD,TAX_FNCACT_TRAINERS,WB_2433_CONFLICT_AND_VIOLENCE,WB_471_ECONOMIC_GROWTH,TAX_FNCACT_DIRECTOR,TAX_FNCACT_POLICE,EPU_POLICY_BUDGET,DISASTER_FIRE,SOC_GENERALCRIME,INEQUALITY,TAX_FNCACT_AUDITOR,ELECTION,WB_1160_SHOCKS_AND_VULNERABILITY,TAX_FNCACT_UNIONIST,TAX_DISEASE_BACTERIA,WB_1921_PRIVATE_SECTOR_DEVELOPMENT,WB_1427_NON_COMMUNICABLE_DISEASE_AND_INJURY,WB_1350_PHARMACEUTICALS,UNGP_CRIME_VIOLENCE,TAX_DISEASE_BRONCHITIS,WB_2745_JOB_QUALITY_AND_LABOR_MARKET_PERFORMANCE,WB_2441_DOMESTIC_VIOLENCE,TRANSPARENCY,TAX_WORLDMAMMALS_CATS,CRISISLEX_C04_LOGISTICS_TRANSPORT,TAX_ETHNICITY_IRISH,ORGANIZED_CRIME,TAX_WORLDFISH_HADDOCK,TAX_FNCACT_WORKER,LEGISLATION,TAX_WORLDMAMMALS_HORSES,TAX_FNCACT_EXECUTIVES,EPU_POLICY_LAW,TAX_FNCACT_MINISTER,WB_942_ACCESS_TO_JUSTICE,TAX_FNCACT_HAIRDRESSERS,TAX_WEAPONS_GUN,TAX_FNCACT_CAVALRYMEN,TAX_ETHNICITY_SCOTTISH,WB_2473_DIPLOMACY_AND_NEGOTIATIONS,WB_699_URBAN_DEVELOPMENT,SOC_POINTSOFINTEREST_UNIVERSITY,TAX_DISEASE_WEIGHT_LOSS,TAX_FNCACT_DEMONSTRATORS,TAX_WORLDLANGUAGES_WELSH,WB_1804_AIRPORTS,TAX_WORLDFISH_WHITEFISH,TAX_FNCACT_CONSULTANTS,GEN_HOLIDAY,TAX_FNCACT_UNIONISTS,ECON_BANKRUPTCY,TAX_FNCACT_MAYORS,TAX_ETHNICITY_JAPANESE,TAX_FNCACT_CIVIL_SERVANTS,TAX_ETHNICITY_CELTIC,TAX_MILITARY_TITLE_LIEUTENANT,SOC_INNOVATION,WB_772_TRADE_FACILITATION_AND_LOGISTICS,TAX_FNCACT_CHAIRMAN,TAX_ETHNICITY_AMERICAN,ENV_FISHERY,CRISISLEX_CRISISLEXREC,RURAL,TAX_FNCACT_DOCTOR,WB_337_INSURANCE,WB_1406_DISEASES,USPEC_POLITICS_GENERAL1,MOVEMENT_GENERAL,TAX_FNCACT_GOVERNMENT_MINISTER,DELAY,DRUG_TRADE,TAX_DISEASE_EMPHYSEMA,TAX_DISEASE_DEMENTIA,TAX_WORLDLANGUAGES_MASSACHUSETTS,TAX_RELIGION_MUSLIM,TAX_POLITICAL_PARTY_DEMOCRATS,WB_672_NETWORK_MANAGEMENT,WB_2470_PEACE_OPERATIONS_AND_CONFLICT_MANAGEMENT,WB_960_FISHERIES_LAW,TAX_WORLDFISH_STURGEON,WB_832_ANTI_CORRUPTION,TAX_POLITICAL_PARTY_LABOUR_PARTY,STRIKE,WB_643_AGING_POPULATION,TAX_FNCACT_CORPORAL,WB_1428_INJURY,EPU_POLICY_CONGRESS,TAX_FNCACT_INSIDER,WB_724_HUMAN_RESOURCES_FOR_PUBLIC_SECTOR,TAX_FNCACT_MAN,TAX_FNCACT_SURGEON,TAX_FNCACT_CHILD,WB_2025_INVESTIGATION,WB_2601_TRADE_LINKAGES_SPILLOVERS_AND_CONNECTIVITY,PUBLIC_TRANSPORT,WB_678_DIGITAL_GOVERNMENT,TAX_FNCACT_AUTHOR,TAX_FNCACT_WOMAN,SOC_POINTSOFINTEREST_HEADQUARTERS,WB_1803_TRANSPORT_INFRASTRUCTURE,CRISISLEX_C06_WATER_SANITATION,WB_2689_JOBS_DIAGNOSTICS,TAX_ETHNICITY_WELSH,MILITARY,WB_470_EDUCATION,NEGOTIATIONS,UNREST_CRACKDOWN,EPU_CATS_HEALTHCARE,ARMEDCONFLICT,WB_2471_PEACEKEEPING,UNREST_BELLIGERENT,WB_1484_EDUCATION_SKILLS_DEVELOPMENT_AND_LABOR_MARKET,WB_621_HEALTH_NUTRITION_AND_POPULATION,UNGP_POLITICAL_FREEDOMS,TAX_WORLDLANGUAGES_LATIN,TAX_DISEASE_SYNDROME,POVERTY,TAX_FNCACT_KILLER,TAX_FNCACT_GOVERNORS,WB_346_COMPETITIVE_INDUSTRIES,TAKE_OFFICE,WB_641_REPRODUCTIVE_AND_MATERNAL_HEALTH,TAX_FNCACT_BABY,SLFID_MILITARY_SPENDING,WB_797_NATIONAL_URBAN_POLICIES,TAX_FNCACT_AGENT,TAX_DISEASE_OBESE,WB_936_ALTERNATIVE_DISPUTE_RESOLUTION,TAX_DISEASE_ABNORMALITIES,WB_1609_FOOD_AND_IN_KIND_TRANSFERS,TAX_FNCACT_ADVISERS,TERROR,WB_450_DEBT,RELIGION,SOC_POINTSOFINTEREST_SCHOOLS,WB_2098_OUTSOURCING,TAX_WORLDLANGUAGES_SCOTS,TAX_FNCACT_MINORITY_LEADER,TAX_FNCACT_SERVANT,ECON_TAXATION,WB_1435_OBESITY,SOC_POINTSOFINTEREST_SCHOOL,TAX_WORLDLANGUAGES_GREEK,TAX_FNCACT_FALCONER,TAX_WORLDMAMMALS_HUMAN,CONSTITUTIONAL,TAX_FNCACT_SPOKESMAN,WB_2453_ORGANIZED_CRIME,TAX_FNCACT_JUDGES,TAX_FNCACT_CHIEF,EPU_POLICY_REFORM,UNGP_CLIMATE_CHANGE_ACTION,ECON_STOCKMARKET,TAX_ETHNICITY_ITALIAN,TAX_FNCACT_RETAILER,WB_793_TRANSPORT_AND_LOGISTICS_SERVICES,TAX_FNCACT_LIEUTENANT,TAX_WORLDLANGUAGES_CORNISH,WB_738_SOCIAL_COHESION,WB_728_PUBLIC_SERVICE_DELIVERY,TAX_RELIGION_CHURCH,TAX_DISEASE_PATHOGENS,CRISISLEX_T02_INJURED,TAX_POLITICAL_PARTY_REPUBLICAN,WB_1305_HEALTH_SERVICES_DELIVERY,CRISISLEX_T08_MISSINGFOUNDTRAPPEDPEOPLE,TAX_FNCACT_FATHER,TAX_FNCACT_CHAMPION,TAX_FNCACT_CEO,SOC_POINTSOFINTEREST_HOSPITALS,TAX_FNCACT_CONSULTANT,TAX_FNCACT_NURSE,WB_697_SOCIAL_PROTECTION_AND_LABOR,CRISISLEX_C07_SAFETY,WB_135_TRANSPORT,TAX_WORLDMAMMALS_DOGS,CRISISLEX_T11_UPDATESSYMPATHY,TAX_ETHNICITY_FRENCH,UNGP_FORESTS_RIVERS_OCEANS,TAX_POLITICAL_PARTY_REPUBLICANS,AFFECT,EPU_POLICY_SPENDING,TAX_ETHNICITY_GREEK,WB_1431_CANCER,TAX_FNCACT_LANCE_CORPORAL,WB_1620_ELDERLY,USPEC_POLICY1,TAX_FNCACT_RESEARCHER,WOUND,TAX_ETHNICITY_MOROCCAN,WB_2165_HEALTH_EMERGENCIES,TAX_FNCACT_EMPLOYEE,RETALIATE,SECURITY_SERVICES,GENDER_VIOLENCE,UNEMPLOYMENT,TAX_DISEASE_RESPIRATORY_ILLNESS,WB_742_YOUTH_AND_GENDER_BASED_VIOLENCE,SOC_POINTSOFINTEREST_JAIL,TAX_FNCACT_OFFICERS,TAX_FNCACT_AIDES,TAX_FNCACT_PROFESSOR,TAX_FNCACT_CIVIL_SERVANT,SCANDAL,DEFECTION,TAX_FNCACT_SHERIFF,MEDIA_MSM,WB_1467_EDUCATION_FOR_ALL,WB_1324_EMERGENCY_MEDICAL_SERVICES,TAX_FNCACT_REPRESENTATIVE,IDEOLOGY,CRISISLEX_T03_DEAD,TAX_FNCACT_MAJORITY_LEADER,TAX_FNCACT_SOLDIERS,EPU_UNCERTAINTY,WB_2495_DETENTION_PRISON_AND_CORRECTIONS_REFORM,GENERAL_GOVERNMENT,TAX_WORLDMAMMALS_FOX,TAX_FNCACT_ACTIVISTS,WB_1383_HEALTH_MANAGEMENT_AND_ADMINISTRATION,MARITIME,WB_658_ENTERPRISE_APPLICATIONS,WB_939_NEGOTIATION]\t2019/12/18\t2019/12\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1581024445246_-657816927","id":"20200123-172224_566357030","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15096"},{"text":"val question3DfParquet_2 = spark.read.parquet(\"s3a://hiroto-yamakawa-telecom-gdelt2019/question3Df_persons_collection.parquet\")","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"question3DfParquet_2: org.apache.spark.sql.DataFrame = [source: string, date: string ... 5 more fields]\n"}]},"apps":[],"jobName":"paragraph_1581024445247_-1058562027","id":"20200123-162416_1141454015","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15097"},{"text":"question3DfParquet_2.write.cassandraFormat(\"query3_ton_pers\", \"gdelt\").save()\nval dfq_3_2 = spark.read.cassandraFormat(\"query3_ton_pers\", \"gdelt\").load()\ndfq_3_2.createOrReplaceTempView(\"query3_ton_pers\")","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"dfq_3_2: org.apache.spark.sql.DataFrame = [source: string, personne: string ... 5 more fields]\n"}]},"apps":[],"jobName":"paragraph_1581024445247_985014436","id":"20200123-162525_991416538","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15098"},{"text":"z.show(spark.sql(\"\"\" SELECT * FROM query3_ton_pers LIMIT 10 \"\"\"))","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"source":"string","personne":"string","annee":"string","date":"string","mois_annee":"string","nombre_articles_personne":"string","ton_moyen":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"source\tpersonne\tannee\tdate\tmois_annee\tnombre_articles_personne\tton_moyen\nphdcomics.com\tDaniel Whiteson\t2019\t2019/12/17\t2019/12\t1\t5.099778\ntheregister.co.uk\tAbdikadir Mohamed\t2019\t2019/12/19\t2019/12\t1\t-3.8095238\ntheregister.co.uk\tAdam Alexander\t2019\t2019/12/05\t2019/12\t1\t-2.2988505\ntheregister.co.uk\tAdiel Akplogan\t2019\t2019/12/17\t2019/12\t1\t-4.5049763\ntheregister.co.uk\tAdrian Cockcroft\t2019\t2019/12/09\t2019/12\t1\t0.5847953\ntheregister.co.uk\tAfrinic Alan Barrett\t2019\t2019/12/17\t2019/12\t1\t-4.5049763\ntheregister.co.uk\tAfrinic Folayan\t2019\t2019/12/17\t2019/12\t1\t-4.5049763\ntheregister.co.uk\tAgron Hasbajrami\t2019\t2019/12/19\t2019/12\t1\t-1.676727\ntheregister.co.uk\tAjit Pai\t2019\t2019/12/04\t2019/12\t1\t-2.3341522\ntheregister.co.uk\tAlan Barrett\t2019\t2019/12/17\t2019/12\t1\t-4.5049763\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1581024445247_458533028","id":"20200124-090710_226539810","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15099"},{"text":"z.show(spark.sql(\"\"\" SELECT * FROM query3_ton_pers WHERE personne LIKE '%Trump%' LIMIT 10 \"\"\"))","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"source":"string","personne":"string","annee":"string","date":"string","mois_annee":"string","nombre_articles_personne":"string","ton_moyen":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"personne","index":1,"aggr":"sum"}],"groups":[],"values":[{"name":"ton_moyen","index":6,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"source\tpersonne\tannee\tdate\tmois_annee\tnombre_articles_personne\tton_moyen\nmavsmoneyball.com\tDonald Trump\t2019\t2019/12/19\t2019/12\t1\t1.8726592\nyeovilexpress.co.uk\tDonald Trump\t2019\t2019/12/08\t2019/12\t1\t-4.4692736\nyeovilexpress.co.uk\tMelania Trump\t2019\t2019/12/25\t2019/12\t1\t2.4875622\ntheneweuropean.co.uk\tDonald Trump\t2019\t2019/12/10\t2019/12\t1\t-0.39184952\n5minutes.rtl.lu\tDonald Trump\t2019\t2019/12/14\t2019/12\t1\t-1.488498\nkgou.org\tDonald Trump\t2019\t2019/12/07\t2019/12\t1\t-2.7732463\nkgou.org\tMelania Trump\t2019\t2019/12/05\t2019/12\t1\t-3.511141\napia-virtual.com\tDonald Trump\t2019\t2019/12/24\t2019/12\t1\t-3.2884097\nwrkr.com\tDonald Trump\t2019\t2019/12/10\t2019/12\t1\t-0.3021148\njakartaglobe.id\tDonald Trump\t2019\t2019/12/31\t2019/12\t1\t-0.60790277\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1581024445247_995591109","id":"20200123-162929_357572460","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15100"},{"text":"val question3DfParquet_3 = spark.read.parquet(\"s3a://hiroto-yamakawa-telecom-gdelt2019/question3Df_themes_collection.parquet\")","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"question3DfParquet_3: org.apache.spark.sql.DataFrame = [source: string, date: string ... 5 more fields]\n"}]},"apps":[],"jobName":"paragraph_1581024445247_559586720","id":"20200123-162559_178027968","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15101"},{"text":"question3DfParquet_3.write.cassandraFormat(\"query3_ton_them\", \"gdelt\").save()\nval dfq_3_3 = spark.read.cassandraFormat(\"query3_ton_them\", \"gdelt\").load()\ndfq_3_3.createOrReplaceTempView(\"query3_ton_them\")","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"tableHide":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"org.apache.spark.SparkException: Job 161 cancelled part of cancelled job group zeppelin-anonymous-2EZ6N973E-20200123-162623_1597934086\n  at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:2041)\n  at org.apache.spark.scheduler.DAGScheduler.handleJobCancellation(DAGScheduler.scala:1976)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply$mcVI$sp(DAGScheduler.scala:946)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply(DAGScheduler.scala:946)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleJobGroupCancelled$1.apply(DAGScheduler.scala:946)\n  at scala.collection.mutable.HashSet.foreach(HashSet.scala:78)\n  at org.apache.spark.scheduler.DAGScheduler.handleJobGroupCancelled(DAGScheduler.scala:946)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:2231)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2211)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2200)\n  at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)\n  at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:777)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2061)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2082)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2114)\n  at com.datastax.spark.connector.RDDFunctions.saveToCassandra(RDDFunctions.scala:36)\n  at org.apache.spark.sql.cassandra.CassandraSourceRelation.insert(CassandraSourceRelation.scala:76)\n  at org.apache.spark.sql.cassandra.DefaultSource.createRelation(DefaultSource.scala:90)\n  at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:45)\n  at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:70)\n  at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:68)\n  at org.apache.spark.sql.execution.command.ExecutedCommandExec.doExecute(commands.scala:86)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:131)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:127)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:156)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n  at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:152)\n  at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:127)\n  at org.apache.spark.sql.execution.QueryExecution.toRdd$lzycompute(QueryExecution.scala:83)\n  at org.apache.spark.sql.execution.QueryExecution.toRdd(QueryExecution.scala:83)\n  at org.apache.spark.sql.DataFrameWriter$$anonfun$runCommand$1.apply(DataFrameWriter.scala:676)\n  at org.apache.spark.sql.DataFrameWriter$$anonfun$runCommand$1.apply(DataFrameWriter.scala:676)\n  at org.apache.spark.sql.execution.SQLExecution$$anonfun$withNewExecutionId$1.apply(SQLExecution.scala:84)\n  at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:165)\n  at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:74)\n  at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:676)\n  at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:285)\n  at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:271)\n  ... 123 elided\n"}]},"apps":[],"jobName":"paragraph_1581024445247_1475526745","id":"20200123-162623_1597934086","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15102"},{"text":"z.show(spark.sql(\"\"\" SELECT * FROM query3_ton_them LIMIT 10 \"\"\"))","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"tableHide":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"org.apache.spark.sql.AnalysisException: Table or view not found: query3_ton_them; line 1 pos 15\n  at org.apache.spark.sql.catalyst.analysis.package$AnalysisErrorAt.failAnalysis(package.scala:47)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveRelations$.org$apache$spark$sql$catalyst$analysis$Analyzer$ResolveRelations$$lookupTableFromCatalog(Analyzer.scala:747)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveRelations$.resolveRelation(Analyzer.scala:699)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveRelations$$anonfun$apply$8.applyOrElse(Analyzer.scala:729)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveRelations$$anonfun$apply$8.applyOrElse(Analyzer.scala:722)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1$$anonfun$apply$1.apply(AnalysisHelper.scala:90)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1$$anonfun$apply$1.apply(AnalysisHelper.scala:90)\n  at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(TreeNode.scala:70)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1.apply(AnalysisHelper.scala:89)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1.apply(AnalysisHelper.scala:86)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.allowInvokingTransformsInAnalyzer(AnalysisHelper.scala:194)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$class.resolveOperatorsUp(AnalysisHelper.scala:86)\n  at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperatorsUp(LogicalPlan.scala:29)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1$$anonfun$1.apply(AnalysisHelper.scala:87)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1$$anonfun$1.apply(AnalysisHelper.scala:87)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:329)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren(TreeNode.scala:327)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1.apply(AnalysisHelper.scala:87)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1.apply(AnalysisHelper.scala:86)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.allowInvokingTransformsInAnalyzer(AnalysisHelper.scala:194)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$class.resolveOperatorsUp(AnalysisHelper.scala:86)\n  at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperatorsUp(LogicalPlan.scala:29)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1$$anonfun$1.apply(AnalysisHelper.scala:87)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1$$anonfun$1.apply(AnalysisHelper.scala:87)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:329)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren(TreeNode.scala:327)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1.apply(AnalysisHelper.scala:87)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1.apply(AnalysisHelper.scala:86)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.allowInvokingTransformsInAnalyzer(AnalysisHelper.scala:194)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$class.resolveOperatorsUp(AnalysisHelper.scala:86)\n  at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperatorsUp(LogicalPlan.scala:29)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1$$anonfun$1.apply(AnalysisHelper.scala:87)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1$$anonfun$1.apply(AnalysisHelper.scala:87)\n  at org.apache.spark.sql.catalyst.trees.TreeNode$$anonfun$4.apply(TreeNode.scala:329)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator(TreeNode.scala:187)\n  at org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren(TreeNode.scala:327)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1.apply(AnalysisHelper.scala:87)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$$anonfun$resolveOperatorsUp$1.apply(AnalysisHelper.scala:86)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.allowInvokingTransformsInAnalyzer(AnalysisHelper.scala:194)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$class.resolveOperatorsUp(AnalysisHelper.scala:86)\n  at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.resolveOperatorsUp(LogicalPlan.scala:29)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveRelations$.apply(Analyzer.scala:722)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveRelations$.apply(Analyzer.scala:668)\n  at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:90)\n  at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1$$anonfun$apply$1.apply(RuleExecutor.scala:87)\n  at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:124)\n  at scala.collection.immutable.List.foldLeft(List.scala:84)\n  at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:87)\n  at org.apache.spark.sql.catalyst.rules.RuleExecutor$$anonfun$execute$1.apply(RuleExecutor.scala:79)\n  at scala.collection.immutable.List.foreach(List.scala:392)\n  at org.apache.spark.sql.catalyst.rules.RuleExecutor.execute(RuleExecutor.scala:79)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer.org$apache$spark$sql$catalyst$analysis$Analyzer$$executeSameContext(Analyzer.scala:143)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$execute$1.apply(Analyzer.scala:135)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$execute$1.apply(Analyzer.scala:135)\n  at org.apache.spark.sql.catalyst.analysis.AnalysisContext$.withLocalMetrics(Analyzer.scala:96)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer.execute(Analyzer.scala:134)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$executeAndCheck$1.apply(Analyzer.scala:118)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer$$anonfun$executeAndCheck$1.apply(Analyzer.scala:117)\n  at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper$.markInAnalyzer(AnalysisHelper.scala:201)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer.executeAndCheck(Analyzer.scala:117)\n  at org.apache.spark.sql.execution.QueryExecution.analyzed$lzycompute(QueryExecution.scala:57)\n  at org.apache.spark.sql.execution.QueryExecution.analyzed(QueryExecution.scala:55)\n  at org.apache.spark.sql.execution.QueryExecution.assertAnalyzed(QueryExecution.scala:47)\n  at org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:78)\n  at org.apache.spark.sql.SparkSession.sql(SparkSession.scala:643)\n  ... 123 elided\nCaused by: org.apache.spark.sql.catalyst.analysis.NoSuchTableException: Table or view 'query3_ton_them' not found in database 'default';\n  at org.apache.spark.sql.hive.client.HiveClient$$anonfun$getTable$1.apply(HiveClient.scala:81)\n  at org.apache.spark.sql.hive.client.HiveClient$$anonfun$getTable$1.apply(HiveClient.scala:81)\n  at scala.Option.getOrElse(Option.scala:121)\n  at org.apache.spark.sql.hive.client.HiveClient$class.getTable(HiveClient.scala:81)\n  at org.apache.spark.sql.hive.client.HiveClientImpl.getTable(HiveClientImpl.scala:83)\n  at org.apache.spark.sql.hive.HiveExternalCatalog.getRawTable(HiveExternalCatalog.scala:118)\n  at org.apache.spark.sql.hive.HiveExternalCatalog$$anonfun$getTable$1.apply(HiveExternalCatalog.scala:700)\n  at org.apache.spark.sql.hive.HiveExternalCatalog$$anonfun$getTable$1.apply(HiveExternalCatalog.scala:700)\n  at org.apache.spark.sql.hive.HiveExternalCatalog.withClient(HiveExternalCatalog.scala:97)\n  at org.apache.spark.sql.hive.HiveExternalCatalog.getTable(HiveExternalCatalog.scala:699)\n  at org.apache.spark.sql.catalyst.catalog.ExternalCatalogWithListener.getTable(ExternalCatalogWithListener.scala:138)\n  at org.apache.spark.sql.catalyst.catalog.SessionCatalog.lookupRelation(SessionCatalog.scala:706)\n  at org.apache.spark.sql.catalyst.analysis.Analyzer$ResolveRelations$.org$apache$spark$sql$catalyst$analysis$Analyzer$ResolveRelations$$lookupTableFromCatalog(Analyzer.scala:744)\n  ... 188 more\n"}]},"apps":[],"jobName":"paragraph_1581024445247_1081649993","id":"20200123-162926_1521553731","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15103"},{"text":"val question3DfParquet_4 = spark.read.parquet(\"s3a://hiroto-yamakawa-telecom-gdelt2019/question3Df_locations_collection.parquet\")","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"question3DfParquet_4: org.apache.spark.sql.DataFrame = [source: string, date: string ... 5 more fields]\n"}]},"apps":[],"jobName":"paragraph_1581024445248_1831323457","id":"20200123-162815_1576593435","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15104"},{"text":"question3DfParquet_4.write.cassandraFormat(\"query3_ton_lieu\", \"gdelt\").save()\nval dfq_3_4 = spark.read.cassandraFormat(\"query3_ton_lieu\", \"gdelt\").load()\ndfq_3_4.createOrReplaceTempView(\"query3_ton_lieu\")","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"dfq_3_4: org.apache.spark.sql.DataFrame = [source: string, lieu: string ... 5 more fields]\n"}]},"apps":[],"jobName":"paragraph_1581024445248_302665389","id":"20200123-162845_1737342219","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15105"},{"text":"z.show(spark.sql(\"\"\" SELECT * FROM query3_ton_lieu LIMIT 10 \"\"\"))","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"source":"string","lieu":"string","annee":"string","date":"string","mois_annee":"string","nombre_articles_lieu":"string","ton_moyen":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"source\tlieu\tannee\tdate\tmois_annee\tnombre_articles_lieu\tton_moyen\nnber.org\tAlaska\t2019\t2019/12/16\t2019/12\t1\t6.081081\nnber.org\tAlaskans\t2019\t2019/12/16\t2019/12\t1\t6.081081\nnber.org\tAmerican\t2019\t2019/12/09\t2019/12\t1\t-2.3923445\nnber.org\tAmericans\t2019\t2019/12/09\t2019/12\t1\t-2.3923445\nnber.org\tChina\t2019\t2019/12/09\t2019/12\t1\t-2.3923445\nnber.org\tChinese\t2019\t2019/12/23\t2019/12\t1\t3.902439\nnber.org\tGermany\t2019\t2019/12/31\t2019/12\t1\t-3.488372\nnber.org\tIndia\t2019\t2019/12/09\t2019/12\t1\t-2.3923445\nnber.org\tIsrael\t2019\t2019/12/23\t2019/12\t1\t1.2376238\nnber.org\tIsraeli\t2019\t2019/12/23\t2019/12\t1\t1.2376238\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1581024445248_631727795","id":"20200124-092023_1080749141","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15106"},{"text":"z.show(spark.sql(\"\"\" SELECT * FROM query3_ton_lieu WHERE lieu NOT LIKE \"%Americ%\" LIMIT 10 \"\"\"))","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":true,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"source":"string","lieu":"string","annee":"string","date":"string","mois_annee":"string","nombre_articles_lieu":"string","ton_moyen":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"lieu","index":1,"aggr":"sum"}],"groups":[],"values":[{"name":"ton_moyen","index":6,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"source\tlieu\tannee\tdate\tmois_annee\tnombre_articles_lieu\tton_moyen\nhromadske.ua\tBerlin\t2019\t2019/12/08\t2019/12\t1\t4.6218486\nhromadske.ua\tMoscow\t2019\t2019/12/08\t2019/12\t1\t4.6218486\nhromadske.ua\tPhilippines\t2019\t2019/12/10\t2019/12\t1\t4.878049\nhromadske.ua\tSouth Africa\t2019\t2019/12/10\t2019/12\t1\t4.878049\nhromadske.ua\tUkraine\t2019\t2019/12/26\t2019/12\t1\t0.0\nhromadske.ua\tUkrainian\t2019\t2019/12/26\t2019/12\t1\t0.0\nhromadske.ua\tUnited States\t2019\t2019/12/10\t2019/12\t1\t4.878049\naustraliangeographic.com.au\tAdelaide\t2019\t2019/12/09\t2019/12\t1\t-1.3471793\naustraliangeographic.com.au\tAntarctica\t2019\t2019/12/17\t2019/12\t1\t0.73770493\naustraliangeographic.com.au\tAussie\t2019\t2019/12/20\t2019/12\t1\t2.182385\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1581024445248_1335980053","id":"20200123-162922_1486685151","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15107"},{"text":"%md ### Création de la table 4","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":18,"editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Création de la table 4</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1581024445248_760417365","id":"20200123-142418_1949834799","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15108"},{"text":"c.withSessionDo ( session => session.execute(\"CREATE TABLE gdelt.q4_1 (pair_pays text, date text, mois_annee text, annee int, nombre_article int, ton_moyen float,PRIMARY KEY (pair_pays))\"))","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res49: com.datastax.driver.core.ResultSet = ResultSet[ exhausted: true, Columns[]]\n"}]},"apps":[],"jobName":"paragraph_1581024445248_1348733942","id":"20200123-120801_908043672","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15109"},{"text":"val question4DfParquet = spark.read.parquet(\"s3a://hiroto-yamakawa-telecom-gdelt2019/question4Df_1mois_corrige.parquet\")","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"question4DfParquet: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [pair_pays: array<string>, date: string ... 4 more fields]\n"}]},"apps":[],"jobName":"paragraph_1581024445248_1515925709","id":"20200123-143044_1765310625","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15110"},{"text":"question4DfParquet.write.cassandraFormat(\"q4_1\", \"gdelt\").save()\nval dfq_4 = spark.read.cassandraFormat(\"q4_1\", \"gdelt\").load()\ndfq_4.createOrReplaceTempView(\"q4_1\")","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"dfq_4: org.apache.spark.sql.DataFrame = [pair_pays: string, annee: int ... 4 more fields]\n"}]},"apps":[],"jobName":"paragraph_1581024445248_-773497279","id":"20200123-144348_92457163","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15111"},{"text":"z.show(spark.sql(\"\"\" SELECT * FROM q4_1  WHERE pair_pays LIKE '%FRA%' LIMIT 10 \"\"\"))","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"pair_pays":"string","annee":"string","date":"string","mois_annee":"string","nombre_article":"string","ton_moyen":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false},"multiBarChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"stackedAreaChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"},"lineChart":{"rotate":{"degree":"-45"},"xLabelStatus":"default"}},"commonSetting":{},"keys":[{"name":"pair_pays","index":0,"aggr":"sum"}],"groups":[],"values":[{"name":"ton_moyen","index":5,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"java.lang.RuntimeException: java.lang.reflect.InvocationTargetException\n  at org.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.java:112)\n  at org.apache.zeppelin.interpreter.BaseZeppelinContext.show(BaseZeppelinContext.java:237)\n  at org.apache.zeppelin.interpreter.BaseZeppelinContext.show(BaseZeppelinContext.java:224)\n  ... 123 elided\nCaused by: java.lang.reflect.InvocationTargetException: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 172.0 failed 4 times, most recent failure: Lost task 0.3 in stage 172.0 (TID 711, ip-172-31-32-198.ec2.internal, executor 37): java.io.IOException: Exception during execution of SELECT \"pair_pays\", \"annee\", \"date\", \"mois_annee\", \"nombre_article\", \"ton_moyen\" FROM \"gdelt\".\"q4_1\" WHERE token(\"pair_pays\") > ? AND token(\"pair_pays\") <= ?   ALLOW FILTERING: Not enough replicas available for query at consistency LOCAL_ONE (1 required but only 0 alive)\n\tat com.datastax.spark.connector.rdd.CassandraTableScanRDD.com$datastax$spark$connector$rdd$CassandraTableScanRDD$$fetchTokenRange(CassandraTableScanRDD.scala:350)\n\tat com.datastax.spark.connector.rdd.CassandraTableScanRDD$$anonfun$17.apply(CassandraTableScanRDD.scala:367)\n\tat com.datastax.spark.connector.rdd.CassandraTableScanRDD$$anonfun$17.apply(CassandraTableScanRDD.scala:367)\n\tat scala.collection.Iterator$$anon$12.nextCur(Iterator.scala:435)\n\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:441)\n\tat com.datastax.spark.connector.util.CountingIterator.hasNext(CountingIterator.scala:12)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)\n\tat org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)\n\tat org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1.hasNext(WholeStageCodegenExec.scala:636)\n\tat org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:291)\n\tat org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:283)\n\tat org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)\n\tat org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)\n\tat org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:288)\n\tat org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:288)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:123)\n\tat org.apache.spark.executor.Executor$TaskRunner$$anonfun$10.apply(Executor.scala:408)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1360)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:414)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: com.datastax.driver.core.exceptions.UnavailableException: Not enough replicas available for query at consistency LOCAL_ONE (1 required but only 0 alive)\n\tat com.datastax.driver.core.exceptions.UnavailableException.copy(UnavailableException.java:109)\n\tat com.datastax.driver.core.exceptions.UnavailableException.copy(UnavailableException.java:27)\n\tat com.datastax.driver.core.DriverThrowables.propagateCause(DriverThrowables.java:37)\n\tat com.datastax.driver.core.DefaultResultSetFuture.getUninterruptibly(DefaultResultSetFuture.java:245)\n\tat com.datastax.driver.core.AbstractSession.execute(AbstractSession.java:68)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat com.datastax.spark.connector.cql.SessionProxy.invoke(SessionProxy.scala:37)\n\tat com.sun.proxy.$Proxy32.execute(Unknown Source)\n\tat com.datastax.spark.connector.cql.DefaultScanner.scan(Scanner.scala:34)\n\tat com.datastax.spark.connector.rdd.CassandraTableScanRDD.com$datastax$spark$connector$rdd$CassandraTableScanRDD$$fetchTokenRange(CassandraTableScanRDD.scala:342)\n\t... 27 more\nCaused by: com.datastax.driver.core.exceptions.UnavailableException: Not enough replicas available for query at consistency LOCAL_ONE (1 required but only 0 alive)\n\tat com.datastax.driver.core.exceptions.UnavailableException.copy(UnavailableException.java:128)\n\tat com.datastax.driver.core.Responses$Error.asException(Responses.java:114)\n\tat com.datastax.driver.core.RequestHandler$SpeculativeExecution.onSet(RequestHandler.java:506)\n\tat com.datastax.driver.core.Connection$Dispatcher.channelRead0(Connection.java:1070)\n\tat com.datastax.driver.core.Connection$Dispatcher.channelRead0(Connection.java:993)\n\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935)\n\tat io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:801)\n\tat io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:404)\n\tat io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:304)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\n\t... 1 more\nCaused by: com.datastax.driver.core.exceptions.UnavailableException: Not enough replicas available for query at consistency LOCAL_ONE (1 required but only 0 alive)\n\tat com.datastax.driver.core.Responses$Error$1.decode(Responses.java:50)\n\tat com.datastax.driver.core.Responses$Error$1.decode(Responses.java:37)\n\tat com.datastax.driver.core.Message$ProtocolDecoder.decode(Message.java:289)\n\tat com.datastax.driver.core.Message$ProtocolDecoder.decode(Message.java:269)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88)\n\t... 18 more\n\nDriver stacktrace:\n  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n  at java.lang.reflect.Method.invoke(Method.java:498)\n  at org.apache.zeppelin.spark.SparkZeppelinContext.showData(SparkZeppelinContext.java:108)\n  ... 125 more\nCaused by: org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 172.0 failed 4 times, most recent failure: Lost task 0.3 in stage 172.0 (TID 711, ip-172-31-32-198.ec2.internal, executor 37): java.io.IOException: Exception during execution of SELECT \"pair_pays\", \"annee\", \"date\", \"mois_annee\", \"nombre_article\", \"ton_moyen\" FROM \"gdelt\".\"q4_1\" WHERE token(\"pair_pays\") > ? AND token(\"pair_pays\") <= ?   ALLOW FILTERING: Not enough replicas available for query at consistency LOCAL_ONE (1 required but only 0 alive)\n\tat com.datastax.spark.connector.rdd.CassandraTableScanRDD.com$datastax$spark$connector$rdd$CassandraTableScanRDD$$fetchTokenRange(CassandraTableScanRDD.scala:350)\n\tat com.datastax.spark.connector.rdd.CassandraTableScanRDD$$anonfun$17.apply(CassandraTableScanRDD.scala:367)\n\tat com.datastax.spark.connector.rdd.CassandraTableScanRDD$$anonfun$17.apply(CassandraTableScanRDD.scala:367)\n\tat scala.collection.Iterator$$anon$12.nextCur(Iterator.scala:435)\n\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:441)\n\tat com.datastax.spark.connector.util.CountingIterator.hasNext(CountingIterator.scala:12)\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n\tat org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)\n\tat org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)\n\tat org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1.hasNext(WholeStageCodegenExec.scala:636)\n\tat org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:291)\n\tat org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:283)\n\tat org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)\n\tat org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)\n\tat org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:288)\n\tat org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)\n\tat org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)\n\tat org.apache.spark.rdd.RDD.iterator(RDD.scala:288)\n\tat org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)\n\tat org.apache.spark.scheduler.Task.run(Task.scala:123)\n\tat org.apache.spark.executor.Executor$TaskRunner$$anonfun$10.apply(Executor.scala:408)\n\tat org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1360)\n\tat org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:414)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: com.datastax.driver.core.exceptions.UnavailableException: Not enough replicas available for query at consistency LOCAL_ONE (1 required but only 0 alive)\n\tat com.datastax.driver.core.exceptions.UnavailableException.copy(UnavailableException.java:109)\n\tat com.datastax.driver.core.exceptions.UnavailableException.copy(UnavailableException.java:27)\n\tat com.datastax.driver.core.DriverThrowables.propagateCause(DriverThrowables.java:37)\n\tat com.datastax.driver.core.DefaultResultSetFuture.getUninterruptibly(DefaultResultSetFuture.java:245)\n\tat com.datastax.driver.core.AbstractSession.execute(AbstractSession.java:68)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat com.datastax.spark.connector.cql.SessionProxy.invoke(SessionProxy.scala:37)\n\tat com.sun.proxy.$Proxy32.execute(Unknown Source)\n\tat com.datastax.spark.connector.cql.DefaultScanner.scan(Scanner.scala:34)\n\tat com.datastax.spark.connector.rdd.CassandraTableScanRDD.com$datastax$spark$connector$rdd$CassandraTableScanRDD$$fetchTokenRange(CassandraTableScanRDD.scala:342)\n\t... 27 more\nCaused by: com.datastax.driver.core.exceptions.UnavailableException: Not enough replicas available for query at consistency LOCAL_ONE (1 required but only 0 alive)\n\tat com.datastax.driver.core.exceptions.UnavailableException.copy(UnavailableException.java:128)\n\tat com.datastax.driver.core.Responses$Error.asException(Responses.java:114)\n\tat com.datastax.driver.core.RequestHandler$SpeculativeExecution.onSet(RequestHandler.java:506)\n\tat com.datastax.driver.core.Connection$Dispatcher.channelRead0(Connection.java:1070)\n\tat com.datastax.driver.core.Connection$Dispatcher.channelRead0(Connection.java:993)\n\tat io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935)\n\tat io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:801)\n\tat io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:404)\n\tat io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:304)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\n\t... 1 more\nCaused by: com.datastax.driver.core.exceptions.UnavailableException: Not enough replicas available for query at consistency LOCAL_ONE (1 required but only 0 alive)\n\tat com.datastax.driver.core.Responses$Error$1.decode(Responses.java:50)\n\tat com.datastax.driver.core.Responses$Error$1.decode(Responses.java:37)\n\tat com.datastax.driver.core.Message$ProtocolDecoder.decode(Message.java:289)\n\tat com.datastax.driver.core.Message$ProtocolDecoder.decode(Message.java:269)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88)\n\t... 18 more\n\nDriver stacktrace:\n  at org.apache.spark.scheduler.DAGScheduler.org$apache$spark$scheduler$DAGScheduler$$failJobAndIndependentStages(DAGScheduler.scala:2041)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:2029)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$abortStage$1.apply(DAGScheduler.scala:2028)\n  at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\n  at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\n  at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2028)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:966)\n  at org.apache.spark.scheduler.DAGScheduler$$anonfun$handleTaskSetFailed$1.apply(DAGScheduler.scala:966)\n  at scala.Option.foreach(Option.scala:257)\n  at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:966)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:2262)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2211)\n  at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2200)\n  at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)\n  at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:777)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2061)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2082)\n  at org.apache.spark.SparkContext.runJob(SparkContext.scala:2101)\n  at org.apache.spark.sql.execution.SparkPlan.executeTake(SparkPlan.scala:401)\n  at org.apache.spark.sql.execution.CollectLimitExec.executeCollect(limit.scala:38)\n  at org.apache.spark.sql.Dataset.org$apache$spark$sql$Dataset$$collectFromPlan(Dataset.scala:3389)\n  at org.apache.spark.sql.Dataset$$anonfun$head$1.apply(Dataset.scala:2550)\n  at org.apache.spark.sql.Dataset$$anonfun$head$1.apply(Dataset.scala:2550)\n  at org.apache.spark.sql.Dataset$$anonfun$52.apply(Dataset.scala:3370)\n  at org.apache.spark.sql.execution.SQLExecution$$anonfun$withNewExecutionId$1.apply(SQLExecution.scala:84)\n  at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:165)\n  at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:74)\n  at org.apache.spark.sql.Dataset.withAction(Dataset.scala:3369)\n  at org.apache.spark.sql.Dataset.head(Dataset.scala:2550)\n  at org.apache.spark.sql.Dataset.take(Dataset.scala:2764)\n  ... 130 more\nCaused by: java.io.IOException: Exception during execution of SELECT \"pair_pays\", \"annee\", \"date\", \"mois_annee\", \"nombre_article\", \"ton_moyen\" FROM \"gdelt\".\"q4_1\" WHERE token(\"pair_pays\") > ? AND token(\"pair_pays\") <= ?   ALLOW FILTERING: Not enough replicas available for query at consistency LOCAL_ONE (1 required but only 0 alive)\n  at com.datastax.spark.connector.rdd.CassandraTableScanRDD.com$datastax$spark$connector$rdd$CassandraTableScanRDD$$fetchTokenRange(CassandraTableScanRDD.scala:350)\n  at com.datastax.spark.connector.rdd.CassandraTableScanRDD$$anonfun$17.apply(CassandraTableScanRDD.scala:367)\n  at com.datastax.spark.connector.rdd.CassandraTableScanRDD$$anonfun$17.apply(CassandraTableScanRDD.scala:367)\n  at scala.collection.Iterator$$anon$12.nextCur(Iterator.scala:435)\n  at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:441)\n  at com.datastax.spark.connector.util.CountingIterator.hasNext(CountingIterator.scala:12)\n  at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\n  at org.apache.spark.sql.catalyst.expressions.GeneratedClass$GeneratedIteratorForCodegenStage1.processNext(Unknown Source)\n  at org.apache.spark.sql.execution.BufferedRowIterator.hasNext(BufferedRowIterator.java:43)\n  at org.apache.spark.sql.execution.WholeStageCodegenExec$$anonfun$13$$anon$1.hasNext(WholeStageCodegenExec.scala:636)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:291)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$2.apply(SparkPlan.scala:283)\n  at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)\n  at org.apache.spark.rdd.RDD$$anonfun$mapPartitionsInternal$1$$anonfun$apply$24.apply(RDD.scala:836)\n  at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)\n  at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)\n  at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)\n  at org.apache.spark.rdd.MapPartitionsRDD.compute(MapPartitionsRDD.scala:52)\n  at org.apache.spark.rdd.RDD.computeOrReadCheckpoint(RDD.scala:324)\n  at org.apache.spark.rdd.RDD.iterator(RDD.scala:288)\n  at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:90)\n  at org.apache.spark.scheduler.Task.run(Task.scala:123)\n  at org.apache.spark.executor.Executor$TaskRunner$$anonfun$10.apply(Executor.scala:408)\n  at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:1360)\n  at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:414)\n  ... 3 more\nCaused by: com.datastax.driver.core.exceptions.UnavailableException: Not enough replicas available for query at consistency LOCAL_ONE (1 required but only 0 alive)\n  at com.datastax.driver.core.exceptions.UnavailableException.copy(UnavailableException.java:109)\n  at com.datastax.driver.core.exceptions.UnavailableException.copy(UnavailableException.java:27)\n  at com.datastax.driver.core.DriverThrowables.propagateCause(DriverThrowables.java:37)\n  at com.datastax.driver.core.DefaultResultSetFuture.getUninterruptibly(DefaultResultSetFuture.java:245)\n  at com.datastax.driver.core.AbstractSession.execute(AbstractSession.java:68)\n  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n  at java.lang.reflect.Method.invoke(Method.java:498)\n  at com.datastax.spark.connector.cql.SessionProxy.invoke(SessionProxy.scala:37)\n  at com.sun.proxy.$Proxy32.execute(Unknown Source)\n  at com.datastax.spark.connector.cql.DefaultScanner.scan(Scanner.scala:34)\n  at com.datastax.spark.connector.rdd.CassandraTableScanRDD.com$datastax$spark$connector$rdd$CassandraTableScanRDD$$fetchTokenRange(CassandraTableScanRDD.scala:342)\n  ... 27 more\nCaused by: com.datastax.driver.core.exceptions.UnavailableException: Not enough replicas available for query at consistency LOCAL_ONE (1 required but only 0 alive)\n  at com.datastax.driver.core.exceptions.UnavailableException.copy(UnavailableException.java:128)\n  at com.datastax.driver.core.Responses$Error.asException(Responses.java:114)\n  at com.datastax.driver.core.RequestHandler$SpeculativeExecution.onSet(RequestHandler.java:506)\n  at com.datastax.driver.core.Connection$Dispatcher.channelRead0(Connection.java:1070)\n  at com.datastax.driver.core.Connection$Dispatcher.channelRead0(Connection.java:993)\n  at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)\n  at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n  at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n  at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n  at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)\n  at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n  at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n  at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n  at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n  at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n  at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n  at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n  at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)\n  at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284)\n  at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n  at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n  at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n  at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359)\n  at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n  at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n  at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935)\n  at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:801)\n  at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:404)\n  at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:304)\n  at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858)\n  at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\n  ... 1 more\nCaused by: com.datastax.driver.core.exceptions.UnavailableException: Not enough replicas available for query at consistency LOCAL_ONE (1 required but only 0 alive)\n  at com.datastax.driver.core.Responses$Error$1.decode(Responses.java:50)\n  at com.datastax.driver.core.Responses$Error$1.decode(Responses.java:37)\n  at com.datastax.driver.core.Message$ProtocolDecoder.decode(Message.java:289)\n  at com.datastax.driver.core.Message$ProtocolDecoder.decode(Message.java:269)\n  at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88)\n  ... 18 more\n"}]},"apps":[],"jobName":"paragraph_1581024445249_-1793212020","id":"20200123-144503_1422517680","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15112"},{"text":"z.show(spark.sql(\"\"\" SELECT * FROM q4_1  WHERE pair_pays LIKE '%FRA%' LIMIT 10 \"\"\"))","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"tableHide":true,"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","fontSize":9,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"pair_pays":"string","annee":"string","date":"string","mois_annee":"string","nombre_article":"string","ton_moyen":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"pair_pays\tannee\tdate\tmois_annee\tnombre_article\tton_moyen\n[CYP,FRA]\t2019\t2019/12/05\t2019/12\t3\t-1.4700758\n[BLZ,FRA]\t2019\t2019/12/06\t2019/12\t1\t-6.88\n[FRA,SAU]\t2019\t2019/12/20\t2019/12\t2\t-3.7811067\n[BMU,FRA]\t2019\t2019/12/18\t2019/12\t1\t-5.357143\n[FRA,TUR]\t2019\t2019/12/26\t2019/12\t3\t-3.7540357\n[FIN,FRA]\t2019\t2019/12/01\t2019/12\t2\t-2.3698773\n[FRA,WAF]\t2019\t2019/12/17\t2019/12\t2\t-2.381789\n[FRA,NLD]\t2019\t2019/12/01\t2019/12\t3\t-4.3456593\n[FRA,UGA]\t2019\t2019/12/30\t2019/12\t1\t-2.0408163\n[FRA,NER]\t2019\t2019/12/24\t2019/12\t10\t-5.136268\n"},{"type":"TEXT","data":""}]},"apps":[],"jobName":"paragraph_1581024445249_-462109384","id":"20200124-103843_1010880727","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15113"},{"text":"%md\nWell done! Vous pouvez maintenaient explorer les donnees via le notebook gdeltExploration.json","user":"anonymous","dateUpdated":"2020-02-06T21:27:25+0000","config":{"tableHide":true,"editorSetting":{"language":"markdown","editOnDblClick":true,"completionKey":"TAB","completionSupport":false},"colWidth":12,"editorMode":"ace/mode/markdown","fontSize":9,"editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1581024445249_589460227","id":"20181212-100557_635513911","dateCreated":"2020-02-06T21:27:25+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15114"}],"name":"gdelt Cassandra Tables","id":"2F1SHYQYV","noteParams":{},"noteForms":{},"angularObjects":{"md:shared_process":[],"sh:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}